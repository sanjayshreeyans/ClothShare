{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport * as SplashScreen from \"./SplashScreen\";\n\nvar AppLoading = function (_React$Component) {\n  _inherits(AppLoading, _React$Component);\n\n  var _super = _createSuper(AppLoading);\n\n  function AppLoading(props) {\n    var _this;\n\n    _classCallCheck(this, AppLoading);\n\n    _this = _super.call(this, props);\n    SplashScreen.preventAutoHide();\n    return _this;\n  }\n\n  _createClass(AppLoading, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.props.autoHideSplash === undefined || this.props.autoHideSplash) {\n        if (global.__E2E__) {\n          SplashScreen.hide();\n        } else {\n          setTimeout(function () {\n            SplashScreen.hide();\n          }, 200);\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return AppLoading;\n}(React.Component);\n\nexport { AppLoading as default };","map":{"version":3,"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,KAAKC,YAAZ;;IAMqBC,U;;;;;EACnB,oBAAYC,KAAZ,EAAwB;IAAA;;IAAA;;IACtB,0BAAMA,KAAN;IACAF,YAAY,CAACG,eAAb;IAFsB;EAGvB;;;;WAED,gCAAoB;MAClB,IAAI,KAAKD,KAAL,CAAWE,cAAX,KAA8BC,SAA9B,IAA2C,KAAKH,KAAL,CAAWE,cAA1D,EAA0E;QAExE,IAAIE,MAAM,CAACC,OAAX,EAAoB;UAClBP,YAAY,CAACQ,IAAb;QACD,CAFD,MAEO;UACLC,UAAU,CAAC,YAAK;YACdT,YAAY,CAACQ,IAAb;UACD,CAFS,EAEP,GAFO,CAAV;QAGD;MACF;IACF;;;WAED,kBAAM;MACJ,OAAO,IAAP;IACD;;;;EArBqCT,KAAK,CAACW,S;;SAAzBT,U","names":["React","SplashScreen","AppLoading","props","preventAutoHide","autoHideSplash","undefined","global","__E2E__","hide","setTimeout","Component"],"sourceRoot":"","sources":["../../src/launch/AppLoadingNativeWrapper.tsx"],"sourcesContent":["import React from 'react';\n\nimport * as SplashScreen from './SplashScreen';\n\ntype Props = {\n  autoHideSplash?: boolean;\n};\n\nexport default class AppLoading extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    SplashScreen.preventAutoHide();\n  }\n\n  componentWillUnmount() {\n    if (this.props.autoHideSplash === undefined || this.props.autoHideSplash) {\n      // Hide immediately in E2E tests\n      if (global.__E2E__) {\n        SplashScreen.hide();\n      } else {\n        setTimeout(() => {\n          SplashScreen.hide();\n        }, 200);\n      }\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}