{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport StorageTask from \"./StorageTask\";\nvar DOWNLOAD_TASK = 'download';\n\nvar StorageDownloadTask = function (_StorageTask) {\n  _inherits(StorageDownloadTask, _StorageTask);\n\n  var _super = _createSuper(StorageDownloadTask);\n\n  function StorageDownloadTask(storageRef, beginTaskFn) {\n    _classCallCheck(this, StorageDownloadTask);\n\n    return _super.call(this, DOWNLOAD_TASK, storageRef, beginTaskFn);\n  }\n\n  return _createClass(StorageDownloadTask);\n}(StorageTask);\n\nexport { StorageDownloadTask as default };","map":{"version":3,"names":["StorageTask","DOWNLOAD_TASK","StorageDownloadTask","storageRef","beginTaskFn"],"sources":["/Users/sanjayshreeyansgmail.com/Documents/Dev/react-cloth-sharing/ClothShare/node_modules/@react-native-firebase/storage/lib/StorageDownloadTask.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport StorageTask from './StorageTask';\n\nconst DOWNLOAD_TASK = 'download';\n\nexport default class StorageDownloadTask extends StorageTask {\n  constructor(storageRef, beginTaskFn) {\n    super(DOWNLOAD_TASK, storageRef, beginTaskFn);\n  }\n}\n"],"mappings":";;;;;;;;;;AAiBA,OAAOA,WAAP;AAEA,IAAMC,aAAa,GAAG,UAAtB;;IAEqBC,mB;;;;;EACnB,6BAAYC,UAAZ,EAAwBC,WAAxB,EAAqC;IAAA;;IAAA,yBAC7BH,aAD6B,EACdE,UADc,EACFC,WADE;EAEpC;;;EAH8CJ,W;;SAA5BE,mB"},"metadata":{},"sourceType":"module"}