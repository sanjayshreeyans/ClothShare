{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Base64 from \"./Base64\";\nimport { isString } from \"./validate\";\nexport * from \"./id\";\nexport * from \"./path\";\nexport * from \"./promise\";\nexport * from \"./validate\";\nexport { default as Base64 } from \"./Base64\";\nexport { default as ReferenceBase } from \"./ReferenceBase\";\nexport function getDataUrlParts(dataUrlString) {\n  var isBase64 = dataUrlString.includes(';base64');\n\n  var _dataUrlString$split = dataUrlString.split(','),\n      _dataUrlString$split2 = _slicedToArray(_dataUrlString$split, 2),\n      mediaType = _dataUrlString$split2[0],\n      base64String = _dataUrlString$split2[1];\n\n  if (!mediaType || !base64String) {\n    return {\n      base64String: undefined,\n      mediaType: undefined\n    };\n  }\n\n  mediaType = mediaType.replace('data:', '').replace(';base64', '');\n\n  if (base64String && base64String.includes('%')) {\n    base64String = decodeURIComponent(base64String);\n  }\n\n  if (!isBase64) {\n    base64String = Base64.btoa(base64String);\n  }\n\n  return {\n    base64String: base64String,\n    mediaType: mediaType\n  };\n}\nexport function once(fn, context) {\n  var onceResult;\n  var ranOnce = false;\n  return function onceInner() {\n    if (!ranOnce) {\n      ranOnce = true;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      onceResult = fn.apply(context || this, args);\n    }\n\n    return onceResult;\n  };\n}\nexport function isError(value) {\n  if (Object.prototype.toString.call(value) === '[object Error]') {\n    return true;\n  }\n\n  return value instanceof Error;\n}\nexport function hasOwnProperty(target, property) {\n  return Object.hasOwnProperty.call(target, property);\n}\nexport function stripTrailingSlash(string) {\n  if (!isString(string)) {\n    return string;\n  }\n\n  return string.endsWith('/') ? string.slice(0, -1) : string;\n}\nexport var isIOS = Platform.OS === 'ios';\nexport var isAndroid = Platform.OS === 'android';\nexport function tryJSONParse(string) {\n  try {\n    return string && JSON.parse(string);\n  } catch (jsonError) {\n    return string;\n  }\n}\nexport function tryJSONStringify(data) {\n  try {\n    return JSON.stringify(data);\n  } catch (jsonError) {\n    return null;\n  }\n}","map":{"version":3,"names":["Base64","isString","default","ReferenceBase","getDataUrlParts","dataUrlString","isBase64","includes","split","mediaType","base64String","undefined","replace","decodeURIComponent","btoa","once","fn","context","onceResult","ranOnce","onceInner","args","apply","isError","value","Object","prototype","toString","call","Error","hasOwnProperty","target","property","stripTrailingSlash","string","endsWith","slice","isIOS","Platform","OS","isAndroid","tryJSONParse","JSON","parse","jsonError","tryJSONStringify","data","stringify"],"sources":["/Users/sanjayshreeyansgmail.com/Documents/Dev/react-cloth-sharing/ClothShare/node_modules/@react-native-firebase/app/lib/common/index.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { Platform } from 'react-native';\nimport Base64 from './Base64';\nimport { isString } from './validate';\n\nexport * from './id';\nexport * from './path';\nexport * from './promise';\nexport * from './validate';\n\nexport { default as Base64 } from './Base64';\nexport { default as ReferenceBase } from './ReferenceBase';\n\nexport function getDataUrlParts(dataUrlString) {\n  const isBase64 = dataUrlString.includes(';base64');\n  let [mediaType, base64String] = dataUrlString.split(',');\n  if (!mediaType || !base64String) {\n    return { base64String: undefined, mediaType: undefined };\n  }\n  mediaType = mediaType.replace('data:', '').replace(';base64', '');\n  if (base64String && base64String.includes('%')) {\n    base64String = decodeURIComponent(base64String);\n  }\n  if (!isBase64) {\n    base64String = Base64.btoa(base64String);\n  }\n  return { base64String, mediaType };\n}\n\nexport function once(fn, context) {\n  let onceResult;\n  let ranOnce = false;\n\n  return function onceInner(...args) {\n    if (!ranOnce) {\n      ranOnce = true;\n      onceResult = fn.apply(context || this, args);\n    }\n\n    return onceResult;\n  };\n}\n\nexport function isError(value) {\n  if (Object.prototype.toString.call(value) === '[object Error]') {\n    return true;\n  }\n\n  return value instanceof Error;\n}\n\nexport function hasOwnProperty(target, property) {\n  return Object.hasOwnProperty.call(target, property);\n}\n\n/**\n * Remove a trailing forward slash from a string if it exists\n *\n * @param string\n * @returns {*}\n */\nexport function stripTrailingSlash(string) {\n  if (!isString(string)) {\n    return string;\n  }\n  return string.endsWith('/') ? string.slice(0, -1) : string;\n}\n\nexport const isIOS = Platform.OS === 'ios';\n\nexport const isAndroid = Platform.OS === 'android';\n\nexport function tryJSONParse(string) {\n  try {\n    return string && JSON.parse(string);\n  } catch (jsonError) {\n    return string;\n  }\n}\n\nexport function tryJSONStringify(data) {\n  try {\n    return JSON.stringify(data);\n  } catch (jsonError) {\n    return null;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}