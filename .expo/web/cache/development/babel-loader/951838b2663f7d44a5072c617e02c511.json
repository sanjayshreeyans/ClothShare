{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { NavigatingContainer } from \"react-native-web/dist/index\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Picker } from \"@react-native-picker/picker\";\nimport Constants from \"expo-constants\";\nimport { useFonts } from \"expo-font\";\nimport { initializeApp } from \"firebase/app\";\nimport react from \"react\";\nimport { AppLoading } from \"expo\";\nimport { getDatabase, ref, onValue, set, push } from \"firebase/database\";\nexport default function destinationPicker(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      selectedLanguage = _React$useState2[0],\n      setSelectedLanguage = _React$useState2[1];\n\n  function validate_type_of_qr_code(qr_info) {\n    console.log(typeof qr_info, \"QR Code Type\");\n    console.log(selectedLanguage, \"Destination\");\n    console.log(qr_info, \"QR Code Info\");\n\n    var replaceAll = require(\"string.prototype.replaceall\");\n\n    qr_info = replaceAll(qr_info, \"[\", \"\");\n    qr_info = replaceAll(qr_info, \"]\", \"\");\n    qr_info = replaceAll(qr_info, \"'\", \"\");\n    qr_info = replaceAll(qr_info, \" \", \"\");\n    qr_info = qr_info.split(\",\");\n    console.log(qr_info, \"After split\");\n\n    if (global.user_grade == \"TEACHER\") {\n      if (qr_info.length == 4) {\n        signIn(qr_info);\n      } else {\n        console.log(\"Wrong code!!!!\");\n      }\n    } else {\n      if (qr_info.length == 2) {\n        console.log(\"signOut\");\n        signOut(qr_info);\n      } else {\n        console.log(\"Wrong code!!!!\");\n      }\n    }\n  }\n\n  var navigate = function navigate() {\n    navigation.navigate(\"Redirecter\");\n  };\n\n  var spread = function spread() {};\n\n  var onPress = function onPress() {\n    navigate();\n    spread();\n  };\n\n  function signOut(data) {\n    if (global.new_user) {} else {\n      console.log(data, \"Informaiton about data\");\n      var today = new Date();\n      var date2 = today.getFullYear() + \"/\" + (today.getMonth() + 1) + \"/\" + today.getDate() + \" \" + today.getHours() + \":\" + today.getMinutes();\n      global.date = today.getFullYear() + \"/\" + (today.getMonth() + 1) + \"/\" + today.getDate() + \"/\" + today.getHours() + \":\" + today.getMinutes();\n      console.log(date2, \"Date 2\");\n      console.log(date, \"Date 1\");\n      var info_dict = {\n        \"Student Name\": global.user_name,\n        \"Room No at Check-Out\": data[1],\n        \"Room No at Check-In\": \"\",\n        \"Student Grade\": global.user_grade,\n        \"Time Left\": date,\n        \"Destination\": String(selectedLanguage),\n        \"Email\": global.user_email,\n        \"Row\": \"\",\n        \"Completed full Cycle\": false\n      };\n      var info_dict3 = {\n        \"Student Name\": global.user_name,\n        \"Room No at Check-Out\": data[1],\n        \"Room No at Check-In\": \"\",\n        \"Student Grade\": global.user_grade,\n        \"Room No\": data[1],\n        \"Time Left\": date,\n        Destination: String(selectedLanguage),\n        Email: global.user_email,\n        \"Completed full Cycle\": false\n      };\n      var info_dict2 = {\n        \"Student Name\": global.user_name,\n        \"Teacher Name\": data[0],\n        \"Room No\": data[1],\n        \"Time Left\": date2,\n        Destination: String(selectedLanguage),\n        Email: global.user_email,\n        \"Completed full Cycle\": false\n      };\n      var db = getDatabase();\n      var queue = ref(db, \"/Queue/\");\n      var data_queue = global.user_grade + \"/\" + global.user_name + \"/Signouts/\" + global.date;\n      global.signout_node = ref(db, global.user_grade + \"/\" + global.user_name + \"/Signouts/\" + global.date);\n      var latest_val_node = ref(db, global.user_grade + \"/\" + global.user_name + \"/Signouts/Latest_Val\");\n      var SPREADSHEET_ID = \"1ilh0SncMmPGsRxu_bJ6h7YG2isc7aFU-WSrxDUlQjyA\";\n      var SHEET_ID = \"1936491392\";\n      var CLIENT_EMAIL = \"pretty@iep1-337004.iam.gserviceaccount.com\";\n      var range = \"A1\";\n      var api_key = \"AIzaSyDQVlXWEWSSuQ_BUhN3mfx7Cq6iYWt5w2I\";\n      var PRIVATE_KEY = \"ya29.A0ARrdaM_C3_cU-s09qq6oNG4cdrnank0ZlGQrcFoG9zxcOagYcqLyIYB2Oa1w_dxbkrQIms7Acm5IZni64Z8GyrjLDRxCni4hgCeyjIvCntafYOWFKipbz6Nc9gtHC4AvjjTHjbCLJNJpbMXu8440SD7wjdS-zA\";\n\n      var appendEmptyRow = function appendEmptyRow() {\n        fetch(\"https://sheets.googleapis.com/v4/spreadsheets/\" + SPREADSHEET_ID + \":batchUpdate\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer \" + PRIVATE_KEY\n          },\n          body: JSON.stringify({\n            requests: [{\n              appendDimension: {\n                sheetId: SHEET_ID,\n                dimension: \"ROWS\",\n                length: 1\n              }\n            }]\n          })\n        });\n      };\n\n      appendEmptyRow();\n      console.log(\"DONEAPPENDING\");\n\n      var GetRows = function GetRows() {\n        fetch(\"https://sheets.googleapis.com/v4/spreadsheets/\" + SPREADSHEET_ID, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer \" + PRIVATE_KEY\n          }\n        }).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          return printObject(info_dict3, data.sheets[\"0\"].properties.gridProperties.rowCount);\n        });\n      };\n\n      function run() {\n        return _regeneratorRuntime.async(function run$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _regeneratorRuntime.awrap(GetRows());\n\n              case 2:\n                console.log(\"HEKIO\", info_dict);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }\n\n      run();\n      console.log(global.row_count, \"From 19\");\n\n      var printObject = function printObject(obj, rowe) {\n        var colum = 1;\n        var row = rowe + 1;\n\n        _extends(info_dict, {\n          Row: rowe + 1\n        });\n\n        set(global.signout_node, info_dict);\n        set(latest_val_node, info_dict2);\n        console.log(info_dict, \"DATA\");\n\n        for (var key in obj) {\n          if (obj.hasOwnProperty(key)) {\n            updateSheetValues(String(obj[key]), row, colum);\n            colum++;\n            console.log(colum, \"colum\");\n            console.log(row, \"row\");\n          }\n        }\n\n        console.log(\"The job finished successfully.\");\n      };\n\n      var updateSheetValues = function updateSheetValues(value, row, colum) {\n        fetch(\"https://sheets.googleapis.com/v4/spreadsheets/\" + SPREADSHEET_ID + \":batchUpdate\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer \" + PRIVATE_KEY\n          },\n          body: JSON.stringify({\n            requests: [{\n              repeatCell: {\n                range: {\n                  startColumnIndex: colum - 1,\n                  endColumnIndex: colum,\n                  startRowIndex: row - 1,\n                  endRowIndex: row,\n                  sheetId: SHEET_ID\n                },\n                cell: {\n                  userEnteredValue: {\n                    stringValue: value\n                  }\n                },\n                fields: \"*\"\n              }\n            }]\n          })\n        });\n      };\n\n      var starCountRef = ref(db, \"INFO\");\n      onValue(starCountRef, function (snapshot) {\n        var data = snapshot.val();\n\n        if (data[\"queue1\"] == false) {\n          console.log(\"I AM MESSING WITH THE VALUES\");\n          data[\"queue1\"] = true;\n          set(starCountRef, data);\n          push(queue, data_queue);\n          navigation.replace(\"Redirecter\");\n          return;\n        } else {\n          push(queue, data_queue);\n          navigation.navigate(\"Redirecter\");\n          return;\n        }\n      }, {\n        onlyOnce: true\n      });\n      console.log(\"Switch has been made\");\n    }\n  }\n\n  function signIn(data) {}\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: styles.paragraph\n  }, \"Swiftoff\"), React.createElement(Text, {\n    style: styles.paragraph3\n  }, \"Once you click \\\"Sign Out\\\", \", \"\\n\", \" you can now leave to your destination\"), React.createElement(Text, {\n    style: styles.paragraph2\n  }, \"Choose a destination:\"), React.createElement(Picker, {\n    style: styles.input,\n    selectedValue: selectedLanguage,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setSelectedLanguage(itemValue);\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"Choose a Destination: \",\n    value: \"unknown\"\n  }), React.createElement(Picker.Item, {\n    label: \"Seminar\",\n    value: \"Seminar\"\n  }), React.createElement(Picker.Item, {\n    label: \"Library\",\n    value: \"Library\"\n  }), React.createElement(Picker.Item, {\n    label: \"Restroom\",\n    value: \"Restroom\"\n  }), React.createElement(Picker.Item, {\n    label: \"Office\",\n    value: \"Office\"\n  }), React.createElement(Picker.Item, {\n    label: \"Other\",\n    value: \"Other\"\n  })), React.createElement(TouchableOpacity, {\n    title: \"Log In\",\n    color: \"purple\",\n    onPress: function onPress() {\n      return validate_type_of_qr_code(global.info_qr);\n    },\n    style: styles.roundButton1\n  }, React.createElement(Text, {\n    style: styles.roundButton13\n  }, \"Sign Out\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    backgroundColor: \"white\",\n    padding: 8\n  },\n  paragraph: {\n    margin: 24,\n    fontSize: 70,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    color: \"black\"\n  },\n  paragraph2: {\n    margin: 24,\n    fontSize: 20,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    color: \"black\"\n  },\n  paragraph3: {\n    margin: 4,\n    fontSize: 35,\n    justifyContent: \"center\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    paddingTop: 40\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    borderWidth: 1,\n    borderRadius: 15,\n    padding: 10,\n    width: 400,\n    justifyContent: \"center\",\n    alignSelf: \"center\"\n  },\n  fixToText: {\n    alignSelf: \"center\",\n    width: 200,\n    borderRadius: 15,\n    paddingTop: 20\n  },\n  roundButton1: {\n    width: 200,\n    height: 50,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    padding: 10,\n    borderRadius: 25,\n    justifyContent: \"center\",\n    backgroundColor: \"purple\"\n  },\n  roundButton2: {\n    width: 200,\n    height: 50,\n    paddingTop: 0,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    padding: 0,\n    borderRadius: 15,\n    backgroundColor: \"orange\"\n  },\n  roundButton13: {\n    fontSize: 20,\n    color: \"white\",\n    justifyContent: \"center\"\n  },\n  roundButton14: {\n    fontSize: 20,\n    color: \"white\"\n  },\n  input2: {\n    height: 40,\n    margin: 12,\n    borderWidth: 0,\n    borderWidth: 0,\n    borderRadius: 15,\n    padding: 10,\n    width: 400,\n    alignSelf: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/sanjayshreeyansgmail.com/Documents/Dev/react_egress-master 4/Screens/dropdownScreen.js"],"names":["React","NavigatingContainer","Picker","Constants","useFonts","initializeApp","react","AppLoading","getDatabase","ref","onValue","set","push","destinationPicker","navigation","useState","selectedLanguage","setSelectedLanguage","validate_type_of_qr_code","qr_info","console","log","replaceAll","require","split","global","user_grade","length","signIn","signOut","navigate","spread","onPress","data","new_user","today","Date","date2","getFullYear","getMonth","getDate","getHours","getMinutes","date","info_dict","user_name","String","user_email","info_dict3","Destination","Email","info_dict2","db","queue","data_queue","signout_node","latest_val_node","SPREADSHEET_ID","SHEET_ID","CLIENT_EMAIL","range","api_key","PRIVATE_KEY","appendEmptyRow","fetch","method","headers","Authorization","body","JSON","stringify","requests","appendDimension","sheetId","dimension","GetRows","then","response","json","printObject","sheets","properties","gridProperties","rowCount","run","row_count","obj","rowe","colum","row","Row","key","hasOwnProperty","updateSheetValues","value","repeatCell","startColumnIndex","endColumnIndex","startRowIndex","endRowIndex","cell","userEnteredValue","stringValue","fields","starCountRef","snapshot","val","replace","onlyOnce","styles","container","paragraph","paragraph3","paragraph2","input","itemValue","itemIndex","info_qr","roundButton1","roundButton13","StyleSheet","create","flex","justifyContent","backgroundColor","padding","margin","fontSize","fontWeight","textAlign","color","paddingTop","height","borderWidth","borderRadius","width","alignSelf","fixToText","alignItems","roundButton2","roundButton14","input2"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  Text,\n  View,\n  StyleSheet,\n  TextInput,\n  Button,\n  TouchableOpacity,\n  NavigatingContainer,\n  ImageBackground,\n} from \"react-native\";\n// import { GoogleSpreadsheet } from \"google-spreadsheet\"\nimport { Picker } from \"@react-native-picker/picker\";\n\nimport Constants from \"expo-constants\";\nimport { useFonts } from \"expo-font\";\nimport { initializeApp } from \"firebase/app\";\nimport react from \"react\";\n\nimport { AppLoading } from \"expo\";\nimport { getDatabase, ref, onValue, set, push } from \"firebase/database\";\n\n\nexport default function destinationPicker({ navigation }) {\n  \n  const [selectedLanguage, setSelectedLanguage] = React.useState();\n\n  function validate_type_of_qr_code(qr_info) {\n    // Converting the String type QR Code info to Array type.\n    \n    console.log(typeof qr_info, \"QR Code Type\");\n    console.log(selectedLanguage, \"Destination\");\n    console.log(qr_info, \"QR Code Info\");\n    const replaceAll = require(\"string.prototype.replaceall\");\n    qr_info = replaceAll(qr_info, \"[\", \"\");\n    qr_info = replaceAll(qr_info, \"]\", \"\");\n    qr_info = replaceAll(qr_info, \"'\", \"\");\n    qr_info = replaceAll(qr_info, \" \", \"\");\n\n    qr_info = qr_info.split(\",\");\n    console.log(qr_info, \"After split\");\n\n    // Converting the String type QR Code info to Array type. Complete.\n\n    // User is a Teacher\n    if (global.user_grade == \"TEACHER\") {\n      // Run this code when the teacher scans the correct code.\n      if (qr_info.length == 4) {\n        signIn(qr_info);\n      }\n\n      // Run this code when the teacher scans the wrong code.\n      else {\n        console.log(\"Wrong code!!!!\");\n      }\n    }\n    // User is a Teacher. Complete\n\n    // User is a Student\n    else {\n      // Run this code when the student scans the correct code.\n      if (qr_info.length == 2) {\n        console.log(\"signOut\");\n        signOut(qr_info);\n      }\n\n      // Run this code when the student scans the wrong code.\n      else {\n        console.log(\"Wrong code!!!!\");\n      }\n    }\n    // User is a Student. Complete.\n  }\n\n  const navigate = () => {\n    navigation.navigate(\"Redirecter\");\n  };\n  const spread = () => {\n    \n  };\n  const onPress = () => {\n    navigate();\n    spread();\n  };\n\n  // Function to check the type of QRCode, Sign-in or Sign-out. Complete.\n\n  // Function to sign-out a student from the classroom.\n  function signOut(data) {\n    if (global.new_user) {\n    }\n\n    // var time = String((today.getFullYear()) + \"/\" + (today.getMonth()+1) + \"/\" +\n    // String(today.getDate()) + \"/\" +\n    // String(today.getHours()) + \":\" +\n    // String(today.getMinutes()))\n    else {\n      \n\n      console.log(data, \"Informaiton about data\");\n      var today = new Date();\n      var date2 =\n        today.getFullYear() +\n        \"/\" +\n        (today.getMonth() + 1) +\n        \"/\" +\n        today.getDate() +\n        \" \" +\n        today.getHours() +\n        \":\" +\n        today.getMinutes();\n\n      global.date =\n        today.getFullYear() +\n        \"/\" +\n        (today.getMonth() + 1) +\n        \"/\" +\n        today.getDate() +\n        \"/\" +\n        today.getHours() +\n        \":\" +\n        today.getMinutes();\n      console.log(date2, \"Date 2\");\n      console.log(date, \"Date 1\");\n      var info_dict = {\n        \"Student Name\": global.user_name,\n        \"Room No at Check-Out\": data[1],\n        \"Room No at Check-In\": \"\",\n        \"Student Grade\": global.user_grade,\n        \n        \"Time Left\": date,\n        \"Destination\": String(selectedLanguage),\n        \"Email\": global.user_email,\n        \"Row\": \"\",\n        \"Completed full Cycle\": false,\n      };\n\n      var info_dict3 = {\n        \"Student Name\": global.user_name,\n        \"Room No at Check-Out\": data[1],\n        \"Room No at Check-In\": \"\",\n        \"Student Grade\": global.user_grade,\n        \"Room No\": data[1],\n        \"Time Left\": date,\n        Destination: String(selectedLanguage),\n        Email: global.user_email,\n        \n        \"Completed full Cycle\": false,\n      };\n\n      var info_dict2 = {\n        \"Student Name\": global.user_name,\n        \"Teacher Name\": data[0],\n        \"Room No\": data[1],\n        \"Time Left\": date2,\n        Destination: String(selectedLanguage),\n        Email: global.user_email,\n        \"Completed full Cycle\": false,\n      };\n\n      // const reference = ref(db, \"users/\" + userId);\n      // set(reference, {\n      //   highscore: score,\n      // });\n\n      // console.log(global.user_name, \" you are sucessfully signed out\", time);\n\n      const db = getDatabase();\n      const queue = ref(db, \"/Queue/\")\n      const data_queue = \n          (global.user_grade +\n          \"/\" +\n          global.user_name +\n          \"/Signouts/\" +\n          global.date)\n \n      global.signout_node = ref(\n        db,\n        global.user_grade + \"/\" + global.user_name + \"/Signouts/\" + global.date\n      );\n      const latest_val_node = ref(\n        db,\n        global.user_grade + \"/\" + global.user_name + \"/Signouts/Latest_Val\"\n      );\n      \n\n\n        const SPREADSHEET_ID = \"1ilh0SncMmPGsRxu_bJ6h7YG2isc7aFU-WSrxDUlQjyA\";\n        const SHEET_ID = \"1936491392\";\n        const CLIENT_EMAIL = \"pretty@iep1-337004.iam.gserviceaccount.com\";\n        const range = \"A1\";\n        //const PRIVATE_KEY2 =\n        // \"-----BEGIN PRIVATE\n        //KEY-----\\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQDjsmPxc3alsRYC\\nmi7JZOItSlVQ+h4+pcR86r7eLKfDvD8BXGIYc9EzRug6oz4K8uQC7EF9jM0CebQj\\nVGIz6lBjKTazUawhWff95OBEyOaoEEYSAByb04izDcCjrJ1COtr7yWjhH067Z3Ti\\nTzD3uI6nYIRr6DqDNPEfw16PdOvUCrv5Jj8Zu5ie3Mw8d5UYd881oJzlv68wKhxb\\ne5RCIYI+op8p4t9OeB0o3I+lomSTHp9co5fpDonC4mUKXg+qgmDmky2p0o7s6dRg\\nBt6mZVvo+45ohOnwWtSOU0mX3vK+/ljji54EizHtxbiRmxkEa3dPPzTTUgqReX5W\\nRmvSzZdXAgMBAAECggEAFs+IxqgYE0pV16XlmQRzyjC/slCUVhdaQ19rBqv3lJrX\\nvwWnyCZWJ2prmnA/J26k3AwaFX9VDHHv03hBLE1Fh2GaGsXMVj0CpJtYwltUDDMx\\nKd18ADplX/a5PUxuJrPpuz62tJLj2s9m/MMNN0v0cp0vNvY5Ymqb22BBqWJ/u6q1\\nNULNka9tYhEN4hhyTNw+q1qSIdCSLsaMmJpm16CSiUidfIsyofhNjSqoVng8Gk9Z\\nGQCguy/KMYDZZLd0K4++fk0DJZtTg9UMPvNObTrVFFCVtVIQC8V4R4JYE8xLkwhr\\nO3eW+/NDYSaxxm37nI18L9deTtnHo5Lj/p+ptNpRgQKBgQD8TnXI4uMfB+MZzMSs\\nBx4k4JsL9DLUtNVJ60POWHK4JEuQwsbZxiU3/BrS2pdW06Up3CwA1ftyaNphEIuo\\ng4Ks0qPd3uVeWIteJ5zdhbdLjKymeZRNtlHcIF+eAKmzuWq6v8uTNOvoOaDsSiji\\n11pOlKtKH57NWuYEucPaM1rg1wKBgQDnB7QdN1VI46yrvlASDjqqcfuzq41cRYiC\\nscNTlolK5ejp5nz3tBMzkZ7DAeHWLtstAKm+bKM/imsY82no242hjhh4LvX1SVi1\\nHTIiU+Kr0JM38rEoDrH1XpWUdom1CW/kGF8cWxD+jO9I5Ee6gzIn/qe4ARNknrjE\\nl4NQ+VetgQKBgCOByzOtMndgfcZYuejXy5c3ALrq7+hdVpLjiBRXADYH7ZZ+wstN\\nBlndoczAtIGkoV7FvG+VraBJP0pfsLfTYiV+M097Gd5wKZTjkEDgm44HSxjWjVdu\\nbBDFgY9T2o4PbwS/DyA1V2nECnCWczCRTAU5CO4Six+tRieuGPDxPz3bAoGAAmot\\nMsT6Sjm++0iQ869cY52vYNBhON6tL5iGDyCarMK8bX1wPvKN5NMX0rf5UVDKD61b\\nGNdv2WEr/2XD7KAm2dJvZQownfC3UaVNedhgnSUf9My/l0iYCZWEgLnAdLj1h2/N\\nxrEY+2AjvCJOsZ9fbdWWkTDJsBqMmdlvkPAaP4ECgYBLLMg5E110Lh7vwMo4be9z\\nMMzV4FTaKG7VH9mo1VGmB0Tuyu0nUNqQslHxHgSS4Gou0AAPs50ZTCwa+a8EV1It\\n7IBvPn0lyg44WIZNoY73gK/jl+6unKap2VE2LrUN5EDl5ziYT7VBbg8OaumjqrRc\\n0OtbowwdQEYvBhw9MHsJYw==\\n-----END\n        // PRIVATE KEY-----\\n\"\n\n        const api_key = \"AIzaSyDQVlXWEWSSuQ_BUhN3mfx7Cq6iYWt5w2I\";\n        const PRIVATE_KEY =\n          \"ya29.A0ARrdaM_C3_cU-s09qq6oNG4cdrnank0ZlGQrcFoG9zxcOagYcqLyIYB2Oa1w_dxbkrQIms7Acm5IZni64Z8GyrjLDRxCni4hgCeyjIvCntafYOWFKipbz6Nc9gtHC4AvjjTHjbCLJNJpbMXu8440SD7wjdS-zA\";\n\n        const appendEmptyRow = () => {\n          fetch(\n            `https://sheets.googleapis.com/v4/spreadsheets/${SPREADSHEET_ID}:batchUpdate`,\n            {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                //update this token with yours.\n                Authorization: `Bearer ${PRIVATE_KEY}`,\n              },\n              body: JSON.stringify({\n                requests: [\n                  {\n                    appendDimension: {\n                      sheetId: SHEET_ID,\n                      dimension: \"ROWS\",\n                      length: 1,\n                    },\n                  },\n                ],\n              }),\n            }\n          );\n        };\n\n        appendEmptyRow();\n        console.log(\"DONEAPPENDING\");\n\n        const GetRows = () => {\n          fetch(\n            `https://sheets.googleapis.com/v4/spreadsheets/${SPREADSHEET_ID}`,\n            {\n              method: \"GET\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                //update this token with yours.\n                Authorization: `Bearer ${PRIVATE_KEY}`,\n              },\n            }\n          )\n            .then((response) => response.json())\n            .then((data) =>\n              printObject(\n                info_dict3,\n                data.sheets[\"0\"].properties.gridProperties.rowCount\n              )\n            );\n        };\n\n        async function run() {\n          await GetRows();\n          console.log(\"HEKIO\", info_dict);\n          \n        }\n        run();  \n        \n        \n        console.log(global.row_count, \"From 19\");\n\n        // while loop that will run through an object and print the values\n\n        const printObject = (obj, rowe) => {\n          var colum = 1;\n          var row = rowe + 1;\n          Object.assign(info_dict, { Row: rowe + 1 });\n          set(global.signout_node, info_dict);\n          set(latest_val_node, info_dict2);\n          console.log(info_dict, \"DATA\");\n          for (var key in obj) {\n            if (obj.hasOwnProperty(key)) {\n              updateSheetValues(String(obj[key]), row, colum);\n              colum++;\n              console.log(colum, \"colum\");\n              console.log(row, \"row\");\n            }\n          }\n          console.log(\"The job finished successfully.\");\n        };\n\n        const updateSheetValues = (value, row, colum) => {\n          fetch(\n            `https://sheets.googleapis.com/v4/spreadsheets/${SPREADSHEET_ID}:batchUpdate`,\n            {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                //update this token with yours.\n                Authorization: `Bearer ${PRIVATE_KEY}`,\n              },\n              body: JSON.stringify({\n                requests: [\n                  {\n                    repeatCell: {\n                      range: {\n                        startColumnIndex: colum - 1,\n                        endColumnIndex: colum,\n                        startRowIndex: row - 1,\n                        endRowIndex: row,\n                        sheetId: SHEET_ID,\n                      },\n                      cell: {\n                        userEnteredValue: {\n                          stringValue: value,\n                        },\n                      },\n                      fields: \"*\",\n                    },\n                  },\n                ],\n              }),\n            }\n          );\n        };\n\n\n\n\n      \n\n      const starCountRef = ref(db, \"INFO\");\n        onValue(\n          starCountRef,\n          (snapshot) => {\n            var data = snapshot.val();\n            if (data[\"queue1\"] == false) {\n              console.log(\"I AM MESSING WITH THE VALUES\");\n              data[\"queue1\"] = true;\n              set(starCountRef, data);\n\n              push(queue, data_queue);\n              navigation.replace(\"Redirecter\");\n              return;\n            } else {\n              push(queue, data_queue);\n              navigation.navigate(\"Redirecter\");\n              return;\n            }\n          },\n          {\n            onlyOnce: true,\n          }\n        );\n\n\n      \n     \n      \n       \n\n      console.log(\"Switch has been made\")\n      // console.log(\"Done, check database for changes.\");\n\n      // const doc = new GoogleSpreadsheet(SPREADSHEET_ID);\n\n      // const appendSpreadsheet = async (row) => {\n      //   try {\n      //     await doc.useServiceAccountAuth({\n      //       client_email: CLIENT_EMAIL,\n      //       private_key: PRIVATE_KEY,\n      //     });\n      //     // loads document properties and worksheets\n      //     await doc.loadInfo();\n\n      //     const sheet = doc.sheetsById[SHEET_ID];\n      //     const result = await sheet.addRow(row);\n      //   } catch (e) {\n      //     console.error(\"Error: \", e);\n      //   }\n      // };\n\n      // const newRow = { \"Student name:\": global.user_name, \"Teacher name:\": data[0], \"Classroom #:\":data[1], \"Grade:\": global.user_grade, \"Student email:\": global.user_email, \"Time Left:\": String(date)};\n\n      // appendSpreadsheet(newRow);\n\n\n      // updateSheetValues();\n\n      \n    }\n  }\n\n  //  Function to sign-in a student\n\n  function signIn(data) {\n    // const db = getDatabase();\n    // const reference = ref(db, \"users/\" + userId);\n    // set(reference, {\n    //   highscore: score,\n    // });\n  }\n \n  return (\n    <View style={styles.container}>\n      <Text style={styles.paragraph}>Swiftoff</Text>\n      <Text style={styles.paragraph3}>Once you click \"Sign Out\", {\"\\n\"} you can now leave to your destination</Text>\n      <Text style={styles.paragraph2}>Choose a destination:</Text>\n      \n      <Picker\n        style={styles.input}\n        selectedValue={selectedLanguage}\n        onValueChange={(itemValue, itemIndex) => setSelectedLanguage(itemValue)}\n      >\n        <Picker.Item label=\"Choose a Destination: \" value=\"unknown\" />\n        <Picker.Item label=\"Seminar\" value=\"Seminar\" />\n        <Picker.Item label=\"Library\" value=\"Library\" />\n        <Picker.Item label=\"Restroom\" value=\"Restroom\" />\n        <Picker.Item label=\"Office\" value=\"Office\" />\n        <Picker.Item label=\"Other\" value=\"Other\" />\n      </Picker>\n\n      <TouchableOpacity\n        title=\"Log In\"\n        color=\"purple\"\n        // validate_type_of_qr_code(global.info_qr)\n        onPress={() => validate_type_of_qr_code(global.info_qr)}\n        style={styles.roundButton1}\n      >\n       \n        <Text style={styles.roundButton13}>Sign Out</Text>\n      </TouchableOpacity>\n    </View>\n  );\n\n  \n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n\n    backgroundColor: \"white\",\n    padding: 8,\n  },\n  paragraph: {\n    margin: 24,\n    fontSize: 70,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    color: \"black\",\n    // SignPainter- HouseScript\n    \n  },\n  paragraph2: {\n    margin: 24,\n    fontSize: 20,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    color: \"black\",\n  },\n  paragraph3: {\n    margin: 4,\n    fontSize: 35,\n    justifyContent: \"center\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    paddingTop: 40,\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    borderWidth: 1,\n    borderRadius: 15,\n    padding: 10,\n    width: 400,\n    justifyContent: \"center\",\n\n    alignSelf: \"center\",\n  },\n\n  fixToText: {\n    alignSelf: \"center\",\n    width: 200,\n    borderRadius: 15,\n    paddingTop: 20,\n  },\n\n  roundButton1: {\n    width: 200,\n    height: 50,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    padding: 10,\n    borderRadius: 25,\n    justifyContent: \"center\",\n\n    backgroundColor: \"purple\",\n  },\n\n  roundButton2: {\n    width: 200,\n    height: 50,\n    paddingTop: 0,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    padding: 0,\n    borderRadius: 15,\n\n    backgroundColor: \"orange\",\n  },\n  // SignPainter- HouseScript 98.0\n  roundButton13: {\n    fontSize: 20,\n    color: \"white\",\n    justifyContent: \"center\",\n  },\n  roundButton14: {\n    fontSize: 20,\n    color: \"white\",\n  },\n  input2: {\n    height: 40,\n    margin: 12,\n    borderWidth: 0,\n    borderWidth: 0,\n    borderRadius: 15,\n    padding: 10,\n    width: 400,\n\n    alignSelf: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}