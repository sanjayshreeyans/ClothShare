{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { RCTDeviceEventEmitter, RCTEventEmitter } from \"./nativeEmitters\";\n\nvar SyntheticPlatformEmitter = function () {\n  function SyntheticPlatformEmitter() {\n    _classCallCheck(this, SyntheticPlatformEmitter);\n\n    this._emitter = new RCTEventEmitter(RCTDeviceEventEmitter.sharedSubscriber);\n  }\n\n  _createClass(SyntheticPlatformEmitter, [{\n    key: \"emit\",\n    value: function emit(eventName, props) {\n      this._emitter.emit(eventName, props);\n    }\n  }]);\n\n  return SyntheticPlatformEmitter;\n}();\n\nexport default new SyntheticPlatformEmitter();","map":{"version":3,"mappings":";;AAAA,SAASA,qBAAT,EAAgCC,eAAhC;;IAMMC,wB;EAAN;IAAA;;IACE,gBAAW,IAAID,eAAJ,CAAoBD,qBAAqB,CAACG,gBAA1C,CAAX;EAKD;;;;WAHC,cAAKC,SAAL,EAAwBC,KAAxB,EAAkC;MAChC,KAAKC,QAAL,CAAcC,IAAd,CAAmBH,SAAnB,EAA8BC,KAA9B;IACD;;;;;;AAGH,eAAe,IAAIH,wBAAJ,EAAf","names":["RCTDeviceEventEmitter","RCTEventEmitter","SyntheticPlatformEmitter","sharedSubscriber","eventName","props","_emitter","emit"],"sourceRoot":"","sources":["../src/SyntheticPlatformEmitter.ts"],"sourcesContent":["import { RCTDeviceEventEmitter, RCTEventEmitter } from './nativeEmitters';\n\n/**\n * This emitter is used for sending synthetic native events to listeners\n * registered in the API layer with `NativeEventEmitter`.\n */\nclass SyntheticPlatformEmitter {\n  _emitter = new RCTEventEmitter(RCTDeviceEventEmitter.sharedSubscriber);\n\n  emit(eventName: string, props: any): void {\n    this._emitter.emit(eventName, props);\n  }\n}\n\nexport default new SyntheticPlatformEmitter();\n"]},"metadata":{},"sourceType":"module"}