{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { isFunction, isNull, isObject } from '@react-native-firebase/app/lib/common';\nimport StorageStatics from \"./StorageStatics\";\nvar TASK_ID = 0;\n\nfunction wrapErrorEventListener(listenerFn, unsubscribe) {\n  return function (event) {\n    if (unsubscribe) {\n      setTimeout(function () {\n        return unsubscribe();\n      }, 0);\n    }\n\n    if (isFunction(listenerFn)) {\n      listenerFn(event.error);\n    }\n  };\n}\n\nfunction wrapSnapshotEventListener(task, listenerFn, unsubscribe) {\n  if (!isFunction(listenerFn)) {\n    return null;\n  }\n\n  return function (event) {\n    if (unsubscribe) {\n      setTimeout(function () {\n        return unsubscribe();\n      }, 0);\n    }\n\n    if (isFunction(listenerFn)) {\n      var snapshot = _extends({}, event);\n\n      snapshot.task = task;\n      snapshot.ref = task._ref;\n\n      if (snapshot.metadata) {\n        if (!snapshot.metadata.generation) {\n          snapshot.metadata.generation = '';\n        }\n\n        if (!snapshot.metadata.bucket) {\n          snapshot.metadata.bucket = task._ref.bucket;\n        }\n\n        if (!snapshot.metadata.metageneration) {\n          snapshot.metadata.metageneration = '';\n        }\n      }\n\n      Object.freeze(snapshot);\n      task._snapshot = snapshot;\n      listenerFn(snapshot);\n    }\n  };\n}\n\nfunction addTaskEventListener(task, eventName, listener) {\n  var _eventName = eventName;\n\n  if (_eventName !== StorageStatics.TaskEvent.STATE_CHANGED) {\n    _eventName = task._type + \"_\" + eventName;\n  }\n\n  return task._storage.emitter.addListener(task._storage.eventNameForApp(task._id, _eventName), listener);\n}\n\nfunction subscribeToEvents(task, nextOrObserver, error, complete) {\n  var _error;\n\n  var _errorSubscription;\n\n  var _next;\n\n  var _nextSubscription;\n\n  var _complete;\n\n  var _completeSubscription;\n\n  var unsubscribe = function unsubscribe() {\n    if (_nextSubscription) {\n      _nextSubscription.remove();\n    }\n\n    if (_errorSubscription) {\n      _errorSubscription.remove();\n    }\n\n    if (_completeSubscription) {\n      _completeSubscription.remove();\n    }\n  };\n\n  if (isFunction(nextOrObserver)) {\n    _error = wrapErrorEventListener(error, unsubscribe);\n    _next = wrapSnapshotEventListener(task, nextOrObserver);\n    _complete = wrapSnapshotEventListener(task, complete, unsubscribe);\n  } else if (isObject(nextOrObserver)) {\n    _error = wrapErrorEventListener(nextOrObserver.error, unsubscribe);\n    _next = wrapSnapshotEventListener(task, nextOrObserver.next);\n    _complete = wrapSnapshotEventListener(task, nextOrObserver.complete, unsubscribe);\n  } else if (isNull(nextOrObserver)) {\n    _error = wrapErrorEventListener(error, unsubscribe);\n    _complete = wrapSnapshotEventListener(task, complete, unsubscribe);\n  } else {\n    throw new Error(\"firebase.storage.StorageTask.on(*, _) 'nextOrObserver' must be a Function, an Object or Null.\");\n  }\n\n  if (_next) {\n    _nextSubscription = addTaskEventListener(task, StorageStatics.TaskEvent.STATE_CHANGED, _next);\n  }\n\n  if (_error) {\n    _errorSubscription = addTaskEventListener(task, 'failure', _error);\n  }\n\n  if (_complete) {\n    _completeSubscription = addTaskEventListener(task, 'success', _complete);\n  }\n\n  return unsubscribe;\n}\n\nvar StorageTask = function () {\n  function StorageTask(type, storageRef, beginTaskFn) {\n    _classCallCheck(this, StorageTask);\n\n    this._type = type;\n    this._id = TASK_ID++;\n    this._promise = null;\n    this._ref = storageRef;\n    this._beginTask = beginTaskFn;\n    this._storage = storageRef._storage;\n    this._snapshot = null;\n  }\n\n  _createClass(StorageTask, [{\n    key: \"then\",\n    get: function get() {\n      var _this = this;\n\n      if (!this._promise) {\n        this._promise = this._beginTask(this);\n      }\n\n      return new Promise(function (resolve, reject) {\n        var boundPromise = _this._promise.then.bind(_this._promise);\n\n        boundPromise(function (response) {\n          _this._snapshot = _objectSpread(_objectSpread({}, response), {}, {\n            ref: _this._ref,\n            task: _this\n          });\n          resolve(response);\n        }).catch(function (error) {\n          reject(error);\n        });\n      }).then.bind(this._promise);\n    }\n  }, {\n    key: \"catch\",\n    get: function get() {\n      if (!this._promise) {\n        this._promise = this._beginTask(this);\n      }\n\n      return this._promise.catch.bind(this._promise);\n    }\n  }, {\n    key: \"snapshot\",\n    get: function get() {\n      return this._snapshot;\n    }\n  }, {\n    key: \"on\",\n    value: function on(event, nextOrObserver, error, complete) {\n      if (event !== StorageStatics.TaskEvent.STATE_CHANGED) {\n        throw new Error(\"firebase.storage.StorageTask.on event argument must be a string with a value of '\" + StorageStatics.TaskEvent.STATE_CHANGED + \"'\");\n      }\n\n      if (!this._promise) {\n        this._promise = this._beginTask(this);\n      }\n\n      if (!nextOrObserver && !error && !complete) {\n        return subscribeToEvents.bind(null, this);\n      }\n\n      return subscribeToEvents(this, nextOrObserver, error, complete);\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      return this._storage.native.setTaskStatus(this._id, 0);\n    }\n  }, {\n    key: \"resume\",\n    value: function resume() {\n      return this._storage.native.setTaskStatus(this._id, 1);\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      return this._storage.native.setTaskStatus(this._id, 2);\n    }\n  }]);\n\n  return StorageTask;\n}();\n\nexport { StorageTask as default };","map":{"version":3,"names":["isFunction","isNull","isObject","StorageStatics","TASK_ID","wrapErrorEventListener","listenerFn","unsubscribe","event","setTimeout","error","wrapSnapshotEventListener","task","snapshot","ref","_ref","metadata","generation","bucket","metageneration","Object","freeze","_snapshot","addTaskEventListener","eventName","listener","_eventName","TaskEvent","STATE_CHANGED","_type","_storage","emitter","addListener","eventNameForApp","_id","subscribeToEvents","nextOrObserver","complete","_error","_errorSubscription","_next","_nextSubscription","_complete","_completeSubscription","remove","next","Error","StorageTask","type","storageRef","beginTaskFn","_promise","_beginTask","Promise","resolve","reject","boundPromise","then","bind","response","catch","native","setTaskStatus"],"sources":["/Users/sanjayshreeyansgmail.com/Documents/Dev/react-cloth-sharing/ClothShare/node_modules/@react-native-firebase/storage/lib/StorageTask.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isFunction, isNull, isObject } from '@react-native-firebase/app/lib/common';\nimport StorageStatics from './StorageStatics';\n\nlet TASK_ID = 0;\n\nfunction wrapErrorEventListener(listenerFn, unsubscribe) {\n  return event => {\n    if (unsubscribe) {\n      setTimeout(() => unsubscribe(), 0);\n    } // 1 frame = 16ms, pushing to next frame\n    if (isFunction(listenerFn)) {\n      listenerFn(event.error);\n    }\n  };\n}\n\nfunction wrapSnapshotEventListener(task, listenerFn, unsubscribe) {\n  if (!isFunction(listenerFn)) {\n    return null;\n  }\n  return event => {\n    if (unsubscribe) {\n      setTimeout(() => unsubscribe(), 0);\n    } // 1 frame = 16ms, pushing to next frame\n    if (isFunction(listenerFn)) {\n      const snapshot = Object.assign({}, event);\n      snapshot.task = task;\n      snapshot.ref = task._ref;\n\n      if (snapshot.metadata) {\n        if (!snapshot.metadata.generation) {\n          snapshot.metadata.generation = '';\n        }\n        if (!snapshot.metadata.bucket) {\n          snapshot.metadata.bucket = task._ref.bucket;\n        }\n        if (!snapshot.metadata.metageneration) {\n          snapshot.metadata.metageneration = '';\n        }\n        // // TODO(salakar): these are always here, cannot repro without, remove in 6.1.0 if no issues:\n        // if (!snapshot.metadata.name) snapshot.metadata.name = task._ref.name;\n        // if (!snapshot.metadata.fullPath) snapshot.metadata.fullPath = task._ref.fullPath;\n      }\n\n      Object.freeze(snapshot);\n      task._snapshot = snapshot;\n\n      listenerFn(snapshot);\n    }\n  };\n}\n\nfunction addTaskEventListener(task, eventName, listener) {\n  let _eventName = eventName;\n  if (_eventName !== StorageStatics.TaskEvent.STATE_CHANGED) {\n    _eventName = `${task._type}_${eventName}`;\n  }\n\n  return task._storage.emitter.addListener(\n    task._storage.eventNameForApp(task._id, _eventName),\n    listener,\n  );\n}\n\nfunction subscribeToEvents(task, nextOrObserver, error, complete) {\n  let _error;\n  let _errorSubscription;\n\n  let _next;\n  let _nextSubscription;\n\n  let _complete;\n  let _completeSubscription;\n\n  const unsubscribe = () => {\n    if (_nextSubscription) {\n      _nextSubscription.remove();\n    }\n    if (_errorSubscription) {\n      _errorSubscription.remove();\n    }\n    if (_completeSubscription) {\n      _completeSubscription.remove();\n    }\n  };\n\n  if (isFunction(nextOrObserver)) {\n    _error = wrapErrorEventListener(error, unsubscribe);\n    _next = wrapSnapshotEventListener(task, nextOrObserver);\n    _complete = wrapSnapshotEventListener(task, complete, unsubscribe);\n  } else if (isObject(nextOrObserver)) {\n    _error = wrapErrorEventListener(nextOrObserver.error, unsubscribe);\n    _next = wrapSnapshotEventListener(task, nextOrObserver.next);\n    _complete = wrapSnapshotEventListener(task, nextOrObserver.complete, unsubscribe);\n  } else if (isNull(nextOrObserver)) {\n    _error = wrapErrorEventListener(error, unsubscribe);\n    _complete = wrapSnapshotEventListener(task, complete, unsubscribe);\n  } else {\n    throw new Error(\n      \"firebase.storage.StorageTask.on(*, _) 'nextOrObserver' must be a Function, an Object or Null.\",\n    );\n  }\n\n  if (_next) {\n    _nextSubscription = addTaskEventListener(task, StorageStatics.TaskEvent.STATE_CHANGED, _next);\n  }\n\n  if (_error) {\n    _errorSubscription = addTaskEventListener(task, 'failure', _error);\n  }\n\n  if (_complete) {\n    _completeSubscription = addTaskEventListener(task, 'success', _complete);\n  }\n\n  return unsubscribe;\n}\n\nexport default class StorageTask {\n  constructor(type, storageRef, beginTaskFn) {\n    this._type = type;\n    this._id = TASK_ID++;\n    this._promise = null;\n    this._ref = storageRef;\n    this._beginTask = beginTaskFn;\n    this._storage = storageRef._storage;\n    this._snapshot = null;\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.UploadTask#then\n   */\n  get then() {\n    if (!this._promise) {\n      this._promise = this._beginTask(this);\n    }\n\n    return new Promise((resolve, reject) => {\n      const boundPromise = this._promise.then.bind(this._promise);\n\n      boundPromise(response => {\n        this._snapshot = { ...response, ref: this._ref, task: this };\n        resolve(response);\n      }).catch(error => {\n        reject(error);\n      });\n    }).then.bind(this._promise);\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.UploadTask#catch\n   */\n  get catch() {\n    if (!this._promise) {\n      this._promise = this._beginTask(this);\n    }\n    return this._promise.catch.bind(this._promise);\n  }\n\n  get snapshot() {\n    return this._snapshot;\n  }\n\n  // // NOT on Web SDK\n  // /**\n  //  * @url https://firebase.google.com/docs/reference/js/firebase.storage.UploadTask#finally\n  //  */\n  // get finally() {\n  //   if (!this._promise) this._promise = this._beginTask(this);\n  //   return this._promise.finally.bind(this._promise);\n  // }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.UploadTask#on\n   */\n  on(event, nextOrObserver, error, complete) {\n    if (event !== StorageStatics.TaskEvent.STATE_CHANGED) {\n      throw new Error(\n        `firebase.storage.StorageTask.on event argument must be a string with a value of '${StorageStatics.TaskEvent.STATE_CHANGED}'`,\n      );\n    }\n\n    if (!this._promise) {\n      this._promise = this._beginTask(this);\n    }\n\n    // if only event provided return the subscriber function\n    if (!nextOrObserver && !error && !complete) {\n      return subscribeToEvents.bind(null, this);\n    }\n\n    return subscribeToEvents(this, nextOrObserver, error, complete);\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.UploadTask#pause\n   */\n  pause() {\n    return this._storage.native.setTaskStatus(this._id, 0);\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.UploadTask#resume\n   */\n  resume() {\n    return this._storage.native.setTaskStatus(this._id, 1);\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.UploadTask#cancel\n   */\n  cancel() {\n    return this._storage.native.setTaskStatus(this._id, 2);\n  }\n}\n"],"mappings":";;;;;;;;;AAiBA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,QAA7B,QAA6C,uCAA7C;AACA,OAAOC,cAAP;AAEA,IAAIC,OAAO,GAAG,CAAd;;AAEA,SAASC,sBAAT,CAAgCC,UAAhC,EAA4CC,WAA5C,EAAyD;EACvD,OAAO,UAAAC,KAAK,EAAI;IACd,IAAID,WAAJ,EAAiB;MACfE,UAAU,CAAC;QAAA,OAAMF,WAAW,EAAjB;MAAA,CAAD,EAAsB,CAAtB,CAAV;IACD;;IACD,IAAIP,UAAU,CAACM,UAAD,CAAd,EAA4B;MAC1BA,UAAU,CAACE,KAAK,CAACE,KAAP,CAAV;IACD;EACF,CAPD;AAQD;;AAED,SAASC,yBAAT,CAAmCC,IAAnC,EAAyCN,UAAzC,EAAqDC,WAArD,EAAkE;EAChE,IAAI,CAACP,UAAU,CAACM,UAAD,CAAf,EAA6B;IAC3B,OAAO,IAAP;EACD;;EACD,OAAO,UAAAE,KAAK,EAAI;IACd,IAAID,WAAJ,EAAiB;MACfE,UAAU,CAAC;QAAA,OAAMF,WAAW,EAAjB;MAAA,CAAD,EAAsB,CAAtB,CAAV;IACD;;IACD,IAAIP,UAAU,CAACM,UAAD,CAAd,EAA4B;MAC1B,IAAMO,QAAQ,GAAG,SAAc,EAAd,EAAkBL,KAAlB,CAAjB;;MACAK,QAAQ,CAACD,IAAT,GAAgBA,IAAhB;MACAC,QAAQ,CAACC,GAAT,GAAeF,IAAI,CAACG,IAApB;;MAEA,IAAIF,QAAQ,CAACG,QAAb,EAAuB;QACrB,IAAI,CAACH,QAAQ,CAACG,QAAT,CAAkBC,UAAvB,EAAmC;UACjCJ,QAAQ,CAACG,QAAT,CAAkBC,UAAlB,GAA+B,EAA/B;QACD;;QACD,IAAI,CAACJ,QAAQ,CAACG,QAAT,CAAkBE,MAAvB,EAA+B;UAC7BL,QAAQ,CAACG,QAAT,CAAkBE,MAAlB,GAA2BN,IAAI,CAACG,IAAL,CAAUG,MAArC;QACD;;QACD,IAAI,CAACL,QAAQ,CAACG,QAAT,CAAkBG,cAAvB,EAAuC;UACrCN,QAAQ,CAACG,QAAT,CAAkBG,cAAlB,GAAmC,EAAnC;QACD;MAIF;;MAEDC,MAAM,CAACC,MAAP,CAAcR,QAAd;MACAD,IAAI,CAACU,SAAL,GAAiBT,QAAjB;MAEAP,UAAU,CAACO,QAAD,CAAV;IACD;EACF,CA7BD;AA8BD;;AAED,SAASU,oBAAT,CAA8BX,IAA9B,EAAoCY,SAApC,EAA+CC,QAA/C,EAAyD;EACvD,IAAIC,UAAU,GAAGF,SAAjB;;EACA,IAAIE,UAAU,KAAKvB,cAAc,CAACwB,SAAf,CAAyBC,aAA5C,EAA2D;IACzDF,UAAU,GAAMd,IAAI,CAACiB,KAAX,SAAoBL,SAA9B;EACD;;EAED,OAAOZ,IAAI,CAACkB,QAAL,CAAcC,OAAd,CAAsBC,WAAtB,CACLpB,IAAI,CAACkB,QAAL,CAAcG,eAAd,CAA8BrB,IAAI,CAACsB,GAAnC,EAAwCR,UAAxC,CADK,EAELD,QAFK,CAAP;AAID;;AAED,SAASU,iBAAT,CAA2BvB,IAA3B,EAAiCwB,cAAjC,EAAiD1B,KAAjD,EAAwD2B,QAAxD,EAAkE;EAChE,IAAIC,MAAJ;;EACA,IAAIC,kBAAJ;;EAEA,IAAIC,KAAJ;;EACA,IAAIC,iBAAJ;;EAEA,IAAIC,SAAJ;;EACA,IAAIC,qBAAJ;;EAEA,IAAMpC,WAAW,GAAG,SAAdA,WAAc,GAAM;IACxB,IAAIkC,iBAAJ,EAAuB;MACrBA,iBAAiB,CAACG,MAAlB;IACD;;IACD,IAAIL,kBAAJ,EAAwB;MACtBA,kBAAkB,CAACK,MAAnB;IACD;;IACD,IAAID,qBAAJ,EAA2B;MACzBA,qBAAqB,CAACC,MAAtB;IACD;EACF,CAVD;;EAYA,IAAI5C,UAAU,CAACoC,cAAD,CAAd,EAAgC;IAC9BE,MAAM,GAAGjC,sBAAsB,CAACK,KAAD,EAAQH,WAAR,CAA/B;IACAiC,KAAK,GAAG7B,yBAAyB,CAACC,IAAD,EAAOwB,cAAP,CAAjC;IACAM,SAAS,GAAG/B,yBAAyB,CAACC,IAAD,EAAOyB,QAAP,EAAiB9B,WAAjB,CAArC;EACD,CAJD,MAIO,IAAIL,QAAQ,CAACkC,cAAD,CAAZ,EAA8B;IACnCE,MAAM,GAAGjC,sBAAsB,CAAC+B,cAAc,CAAC1B,KAAhB,EAAuBH,WAAvB,CAA/B;IACAiC,KAAK,GAAG7B,yBAAyB,CAACC,IAAD,EAAOwB,cAAc,CAACS,IAAtB,CAAjC;IACAH,SAAS,GAAG/B,yBAAyB,CAACC,IAAD,EAAOwB,cAAc,CAACC,QAAtB,EAAgC9B,WAAhC,CAArC;EACD,CAJM,MAIA,IAAIN,MAAM,CAACmC,cAAD,CAAV,EAA4B;IACjCE,MAAM,GAAGjC,sBAAsB,CAACK,KAAD,EAAQH,WAAR,CAA/B;IACAmC,SAAS,GAAG/B,yBAAyB,CAACC,IAAD,EAAOyB,QAAP,EAAiB9B,WAAjB,CAArC;EACD,CAHM,MAGA;IACL,MAAM,IAAIuC,KAAJ,CACJ,+FADI,CAAN;EAGD;;EAED,IAAIN,KAAJ,EAAW;IACTC,iBAAiB,GAAGlB,oBAAoB,CAACX,IAAD,EAAOT,cAAc,CAACwB,SAAf,CAAyBC,aAAhC,EAA+CY,KAA/C,CAAxC;EACD;;EAED,IAAIF,MAAJ,EAAY;IACVC,kBAAkB,GAAGhB,oBAAoB,CAACX,IAAD,EAAO,SAAP,EAAkB0B,MAAlB,CAAzC;EACD;;EAED,IAAII,SAAJ,EAAe;IACbC,qBAAqB,GAAGpB,oBAAoB,CAACX,IAAD,EAAO,SAAP,EAAkB8B,SAAlB,CAA5C;EACD;;EAED,OAAOnC,WAAP;AACD;;IAEoBwC,W;EACnB,qBAAYC,IAAZ,EAAkBC,UAAlB,EAA8BC,WAA9B,EAA2C;IAAA;;IACzC,KAAKrB,KAAL,GAAamB,IAAb;IACA,KAAKd,GAAL,GAAW9B,OAAO,EAAlB;IACA,KAAK+C,QAAL,GAAgB,IAAhB;IACA,KAAKpC,IAAL,GAAYkC,UAAZ;IACA,KAAKG,UAAL,GAAkBF,WAAlB;IACA,KAAKpB,QAAL,GAAgBmB,UAAU,CAACnB,QAA3B;IACA,KAAKR,SAAL,GAAiB,IAAjB;EACD;;;;SAKD,eAAW;MAAA;;MACT,IAAI,CAAC,KAAK6B,QAAV,EAAoB;QAClB,KAAKA,QAAL,GAAgB,KAAKC,UAAL,CAAgB,IAAhB,CAAhB;MACD;;MAED,OAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;QACtC,IAAMC,YAAY,GAAG,KAAI,CAACL,QAAL,CAAcM,IAAd,CAAmBC,IAAnB,CAAwB,KAAI,CAACP,QAA7B,CAArB;;QAEAK,YAAY,CAAC,UAAAG,QAAQ,EAAI;UACvB,KAAI,CAACrC,SAAL,mCAAsBqC,QAAtB;YAAgC7C,GAAG,EAAE,KAAI,CAACC,IAA1C;YAAgDH,IAAI,EAAE;UAAtD;UACA0C,OAAO,CAACK,QAAD,CAAP;QACD,CAHW,CAAZ,CAGGC,KAHH,CAGS,UAAAlD,KAAK,EAAI;UAChB6C,MAAM,CAAC7C,KAAD,CAAN;QACD,CALD;MAMD,CATM,EASJ+C,IATI,CASCC,IATD,CASM,KAAKP,QATX,CAAP;IAUD;;;SAKD,eAAY;MACV,IAAI,CAAC,KAAKA,QAAV,EAAoB;QAClB,KAAKA,QAAL,GAAgB,KAAKC,UAAL,CAAgB,IAAhB,CAAhB;MACD;;MACD,OAAO,KAAKD,QAAL,CAAcS,KAAd,CAAoBF,IAApB,CAAyB,KAAKP,QAA9B,CAAP;IACD;;;SAED,eAAe;MACb,OAAO,KAAK7B,SAAZ;IACD;;;WAcD,YAAGd,KAAH,EAAU4B,cAAV,EAA0B1B,KAA1B,EAAiC2B,QAAjC,EAA2C;MACzC,IAAI7B,KAAK,KAAKL,cAAc,CAACwB,SAAf,CAAyBC,aAAvC,EAAsD;QACpD,MAAM,IAAIkB,KAAJ,uFACgF3C,cAAc,CAACwB,SAAf,CAAyBC,aADzG,OAAN;MAGD;;MAED,IAAI,CAAC,KAAKuB,QAAV,EAAoB;QAClB,KAAKA,QAAL,GAAgB,KAAKC,UAAL,CAAgB,IAAhB,CAAhB;MACD;;MAGD,IAAI,CAAChB,cAAD,IAAmB,CAAC1B,KAApB,IAA6B,CAAC2B,QAAlC,EAA4C;QAC1C,OAAOF,iBAAiB,CAACuB,IAAlB,CAAuB,IAAvB,EAA6B,IAA7B,CAAP;MACD;;MAED,OAAOvB,iBAAiB,CAAC,IAAD,EAAOC,cAAP,EAAuB1B,KAAvB,EAA8B2B,QAA9B,CAAxB;IACD;;;WAKD,iBAAQ;MACN,OAAO,KAAKP,QAAL,CAAc+B,MAAd,CAAqBC,aAArB,CAAmC,KAAK5B,GAAxC,EAA6C,CAA7C,CAAP;IACD;;;WAKD,kBAAS;MACP,OAAO,KAAKJ,QAAL,CAAc+B,MAAd,CAAqBC,aAArB,CAAmC,KAAK5B,GAAxC,EAA6C,CAA7C,CAAP;IACD;;;WAKD,kBAAS;MACP,OAAO,KAAKJ,QAAL,CAAc+B,MAAd,CAAqBC,aAArB,CAAmC,KAAK5B,GAAxC,EAA6C,CAA7C,CAAP;IACD;;;;;;SA/FkBa,W"},"metadata":{},"sourceType":"module"}