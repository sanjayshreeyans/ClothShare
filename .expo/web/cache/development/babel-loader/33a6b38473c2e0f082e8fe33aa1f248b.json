{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Base64, getDataUrlParts, hasOwnProperty, isInteger, isNumber, isObject, isString, isUndefined, pathChild, pathLastComponent, pathParent, ReferenceBase, toFilePath } from '@react-native-firebase/app/lib/common';\nimport StorageDownloadTask from \"./StorageDownloadTask\";\nimport StorageListResult, { provideStorageReferenceClass } from \"./StorageListResult\";\nimport StorageStatics from \"./StorageStatics\";\nimport StorageUploadTask from \"./StorageUploadTask\";\nimport { validateMetadata } from \"./utils\";\n\nvar StorageReference = function (_ReferenceBase) {\n  _inherits(StorageReference, _ReferenceBase);\n\n  var _super = _createSuper(StorageReference);\n\n  function StorageReference(storage, path) {\n    var _this;\n\n    _classCallCheck(this, StorageReference);\n\n    _this = _super.call(this, path);\n    _this._storage = storage;\n    return _this;\n  }\n\n  _createClass(StorageReference, [{\n    key: \"bucket\",\n    get: function get() {\n      return this._storage._customUrlOrRegion.replace('gs://', '');\n    }\n  }, {\n    key: \"fullPath\",\n    get: function get() {\n      return this.path;\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return pathLastComponent(this.path);\n    }\n  }, {\n    key: \"parent\",\n    get: function get() {\n      var parentPath = pathParent(this.path);\n\n      if (parentPath === null) {\n        return parentPath;\n      }\n\n      return new StorageReference(this._storage, parentPath);\n    }\n  }, {\n    key: \"root\",\n    get: function get() {\n      return new StorageReference(this._storage, '/');\n    }\n  }, {\n    key: \"storage\",\n    get: function get() {\n      return this._storage;\n    }\n  }, {\n    key: \"child\",\n    value: function child(path) {\n      var childPath = pathChild(this.path, path);\n      return new StorageReference(this._storage, childPath);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      return this._storage.native.delete(this.toString());\n    }\n  }, {\n    key: \"getDownloadURL\",\n    value: function getDownloadURL() {\n      return this._storage.native.getDownloadURL(this.toString());\n    }\n  }, {\n    key: \"getMetadata\",\n    value: function getMetadata() {\n      return this._storage.native.getMetadata(this.toString());\n    }\n  }, {\n    key: \"list\",\n    value: function list(options) {\n      var _this2 = this;\n\n      if (!isUndefined(options) && !isObject(options)) {\n        throw new Error(\"firebase.storage.StorageReference.list(*) 'options' expected an object value.\");\n      }\n\n      var listOptions = {\n        maxResults: 1000\n      };\n\n      if (options) {\n        if (hasOwnProperty(options, 'maxResults')) {\n          if (!isNumber(options.maxResults) || !isInteger(options.maxResults)) {\n            throw new Error(\"firebase.storage.StorageReference.list(*) 'options.maxResults' expected a number value.\");\n          }\n\n          if (options.maxResults < 1 || options.maxResults > 1000) {\n            throw new Error(\"firebase.storage.StorageReference.list(*) 'options.maxResults' expected a number value between 1-1000.\");\n          }\n\n          listOptions.maxResults = options.maxResults;\n        }\n\n        if (options.pageToken) {\n          if (!isString(options.pageToken)) {\n            throw new Error(\"firebase.storage.StorageReference.list(*) 'options.pageToken' expected a string value.\");\n          }\n\n          listOptions.pageToken = options.pageToken;\n        }\n      }\n\n      return this._storage.native.list(this.toString(), listOptions).then(function (data) {\n        return new StorageListResult(_this2._storage, data);\n      });\n    }\n  }, {\n    key: \"listAll\",\n    value: function listAll() {\n      var _this3 = this;\n\n      return this._storage.native.listAll(this.toString()).then(function (data) {\n        return new StorageListResult(_this3._storage, data);\n      });\n    }\n  }, {\n    key: \"put\",\n    value: function put(data, metadata) {\n      var _this4 = this;\n\n      if (!isUndefined(metadata)) {\n        validateMetadata(metadata, false);\n      }\n\n      return new StorageUploadTask(this, function (task) {\n        return Base64.fromData(data).then(function (_ref) {\n          var string = _ref.string,\n              format = _ref.format;\n\n          var _this4$_updateString = _this4._updateString(string, format, metadata, false),\n              _string = _this4$_updateString._string,\n              _format = _this4$_updateString._format,\n              _metadata = _this4$_updateString._metadata;\n\n          return _this4._storage.native.putString(_this4.toString(), _string, _format, _metadata, task._id);\n        });\n      });\n    }\n  }, {\n    key: \"putString\",\n    value: function putString(string) {\n      var _this5 = this;\n\n      var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : StorageStatics.StringFormat.RAW;\n      var metadata = arguments.length > 2 ? arguments[2] : undefined;\n\n      var _this$_updateString = this._updateString(string, format, metadata, false),\n          _string = _this$_updateString._string,\n          _format = _this$_updateString._format,\n          _metadata = _this$_updateString._metadata;\n\n      return new StorageUploadTask(this, function (task) {\n        return _this5._storage.native.putString(_this5.toString(), _string, _format, _metadata, task._id);\n      });\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      if (this.path.length <= 1) {\n        return \"\" + this._storage._customUrlOrRegion;\n      }\n\n      return this._storage._customUrlOrRegion + \"/\" + this.path;\n    }\n  }, {\n    key: \"updateMetadata\",\n    value: function updateMetadata(metadata) {\n      validateMetadata(metadata);\n      return this._storage.native.updateMetadata(this.toString(), metadata);\n    }\n  }, {\n    key: \"writeToFile\",\n    value: function writeToFile(filePath) {\n      var _this6 = this;\n\n      if (!isString(filePath)) {\n        throw new Error(\"firebase.storage.StorageReference.writeToFile(*) 'filePath' expects a string value.\");\n      }\n\n      return new StorageDownloadTask(this, function (task) {\n        return _this6._storage.native.writeToFile(_this6.toString(), toFilePath(filePath), task._id);\n      });\n    }\n  }, {\n    key: \"putFile\",\n    value: function putFile(filePath, metadata) {\n      var _this7 = this;\n\n      if (!isUndefined(metadata)) {\n        validateMetadata(metadata, false);\n      }\n\n      if (!isString(filePath)) {\n        throw new Error(\"firebase.storage.StorageReference.putFile(*, _) 'filePath' expects a string value.\");\n      }\n\n      return new StorageUploadTask(this, function (task) {\n        return _this7._storage.native.putFile(_this7.toString(), toFilePath(filePath), metadata, task._id);\n      });\n    }\n  }, {\n    key: \"_updateString\",\n    value: function _updateString(string, format, metadata) {\n      var update = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (!isString(string)) {\n        throw new Error(\"firebase.storage.StorageReference.putString(*, _, _) 'string' expects a string value.\");\n      }\n\n      if (!Object.values(StorageStatics.StringFormat).includes(format)) {\n        throw new Error(\"firebase.storage.StorageReference.putString(_, *, _) 'format' provided is invalid, must be one of \" + Object.values(StorageStatics.StringFormat).join(',') + \".\");\n      }\n\n      if (!isUndefined(metadata)) {\n        validateMetadata(metadata, update);\n      }\n\n      var _string = string;\n      var _format = format;\n      var _metadata = metadata;\n\n      if (format === StorageStatics.StringFormat.RAW) {\n        _string = Base64.btoa(_string);\n        _format = StorageStatics.StringFormat.BASE64;\n      } else if (format === StorageStatics.StringFormat.DATA_URL) {\n        var _getDataUrlParts = getDataUrlParts(_string),\n            mediaType = _getDataUrlParts.mediaType,\n            base64String = _getDataUrlParts.base64String;\n\n        if (isUndefined(base64String)) {\n          throw new Error('firebase.storage.StorageReference.putString(*, _, _) invalid data_url string provided.');\n        }\n\n        if (isUndefined(metadata) || isUndefined(metadata.contentType)) {\n          if (isUndefined(metadata)) {\n            _metadata = {};\n          }\n\n          _metadata.contentType = mediaType;\n          _string = base64String;\n          _format = StorageStatics.StringFormat.BASE64;\n        }\n      }\n\n      return {\n        _string: _string,\n        _metadata: _metadata,\n        _format: _format\n      };\n    }\n  }]);\n\n  return StorageReference;\n}(ReferenceBase);\n\nexport { StorageReference as default };\nprovideStorageReferenceClass(StorageReference);","map":{"version":3,"names":["Base64","getDataUrlParts","hasOwnProperty","isInteger","isNumber","isObject","isString","isUndefined","pathChild","pathLastComponent","pathParent","ReferenceBase","toFilePath","StorageDownloadTask","StorageListResult","provideStorageReferenceClass","StorageStatics","StorageUploadTask","validateMetadata","StorageReference","storage","path","_storage","_customUrlOrRegion","replace","parentPath","childPath","native","delete","toString","getDownloadURL","getMetadata","options","Error","listOptions","maxResults","pageToken","list","then","data","listAll","metadata","task","fromData","string","format","_updateString","_string","_format","_metadata","putString","_id","StringFormat","RAW","length","updateMetadata","filePath","writeToFile","putFile","update","Object","values","includes","join","btoa","BASE64","DATA_URL","mediaType","base64String","contentType"],"sources":["/Users/sanjayshreeyansgmail.com/Documents/Dev/react-cloth-sharing/ClothShare/node_modules/@react-native-firebase/storage/lib/StorageReference.js"],"sourcesContent":["/* eslint-disable no-console */\n/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport {\n  Base64,\n  getDataUrlParts,\n  hasOwnProperty,\n  isInteger,\n  isNumber,\n  isObject,\n  isString,\n  isUndefined,\n  pathChild,\n  pathLastComponent,\n  pathParent,\n  ReferenceBase,\n  toFilePath,\n} from '@react-native-firebase/app/lib/common';\nimport StorageDownloadTask from './StorageDownloadTask';\nimport StorageListResult, { provideStorageReferenceClass } from './StorageListResult';\nimport StorageStatics from './StorageStatics';\nimport StorageUploadTask from './StorageUploadTask';\nimport { validateMetadata } from './utils';\n\nexport default class StorageReference extends ReferenceBase {\n  constructor(storage, path) {\n    super(path);\n    this._storage = storage;\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#bucket\n   */\n  get bucket() {\n    return this._storage._customUrlOrRegion.replace('gs://', '');\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#fullPath\n   */\n  get fullPath() {\n    return this.path;\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#name\n   */\n  get name() {\n    return pathLastComponent(this.path);\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#parent\n   */\n  get parent() {\n    const parentPath = pathParent(this.path);\n    if (parentPath === null) {\n      return parentPath;\n    }\n    return new StorageReference(this._storage, parentPath);\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#root\n   */\n  get root() {\n    return new StorageReference(this._storage, '/');\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#storage\n   */\n  get storage() {\n    return this._storage;\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#child\n   */\n  child(path) {\n    const childPath = pathChild(this.path, path);\n    return new StorageReference(this._storage, childPath);\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#delete\n   */\n  delete() {\n    return this._storage.native.delete(this.toString());\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getDownloadURL\n   */\n  getDownloadURL() {\n    return this._storage.native.getDownloadURL(this.toString());\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getMetadata\n   */\n  getMetadata() {\n    return this._storage.native.getMetadata(this.toString());\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#list\n   */\n  list(options) {\n    if (!isUndefined(options) && !isObject(options)) {\n      throw new Error(\n        \"firebase.storage.StorageReference.list(*) 'options' expected an object value.\",\n      );\n    }\n\n    const listOptions = {\n      maxResults: 1000,\n    };\n\n    if (options) {\n      if (hasOwnProperty(options, 'maxResults')) {\n        if (!isNumber(options.maxResults) || !isInteger(options.maxResults)) {\n          throw new Error(\n            \"firebase.storage.StorageReference.list(*) 'options.maxResults' expected a number value.\",\n          );\n        }\n\n        if (options.maxResults < 1 || options.maxResults > 1000) {\n          throw new Error(\n            \"firebase.storage.StorageReference.list(*) 'options.maxResults' expected a number value between 1-1000.\",\n          );\n        }\n\n        listOptions.maxResults = options.maxResults;\n      }\n\n      if (options.pageToken) {\n        if (!isString(options.pageToken)) {\n          throw new Error(\n            \"firebase.storage.StorageReference.list(*) 'options.pageToken' expected a string value.\",\n          );\n        }\n\n        listOptions.pageToken = options.pageToken;\n      }\n    }\n\n    return this._storage.native\n      .list(this.toString(), listOptions)\n      .then(data => new StorageListResult(this._storage, data));\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#listAll\n   */\n  listAll() {\n    return this._storage.native\n      .listAll(this.toString())\n      .then(data => new StorageListResult(this._storage, data));\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#put\n   */\n  put(data, metadata) {\n    if (!isUndefined(metadata)) {\n      validateMetadata(metadata, false);\n    }\n\n    return new StorageUploadTask(this, task =>\n      Base64.fromData(data).then(({ string, format }) => {\n        const { _string, _format, _metadata } = this._updateString(string, format, metadata, false);\n        return this._storage.native.putString(\n          this.toString(),\n          _string,\n          _format,\n          _metadata,\n          task._id,\n        );\n      }),\n    );\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#putString\n   */\n  putString(string, format = StorageStatics.StringFormat.RAW, metadata) {\n    const { _string, _format, _metadata } = this._updateString(string, format, metadata, false);\n\n    return new StorageUploadTask(this, task =>\n      this._storage.native.putString(this.toString(), _string, _format, _metadata, task._id),\n    );\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#fullPath\n   */\n  toString() {\n    if (this.path.length <= 1) {\n      return `${this._storage._customUrlOrRegion}`;\n    }\n\n    return `${this._storage._customUrlOrRegion}/${this.path}`;\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#updateMetadata\n   */\n  updateMetadata(metadata) {\n    validateMetadata(metadata);\n    return this._storage.native.updateMetadata(this.toString(), metadata);\n  }\n\n  /* ----------------------------------------\n   *   EXTRA APIS (DO NOT ON EXIST WEB SDK)\n   * ---------------------------------------- */\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference\n   */\n  writeToFile(filePath) {\n    if (!isString(filePath)) {\n      throw new Error(\n        \"firebase.storage.StorageReference.writeToFile(*) 'filePath' expects a string value.\",\n      );\n    }\n\n    return new StorageDownloadTask(this, task =>\n      this._storage.native.writeToFile(this.toString(), toFilePath(filePath), task._id),\n    );\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference\n   */\n  putFile(filePath, metadata) {\n    if (!isUndefined(metadata)) {\n      validateMetadata(metadata, false);\n    }\n\n    if (!isString(filePath)) {\n      throw new Error(\n        \"firebase.storage.StorageReference.putFile(*, _) 'filePath' expects a string value.\",\n      );\n    }\n\n    return new StorageUploadTask(this, task =>\n      this._storage.native.putFile(this.toString(), toFilePath(filePath), metadata, task._id),\n    );\n  }\n\n  _updateString(string, format, metadata, update = false) {\n    if (!isString(string)) {\n      throw new Error(\n        \"firebase.storage.StorageReference.putString(*, _, _) 'string' expects a string value.\",\n      );\n    }\n\n    if (!Object.values(StorageStatics.StringFormat).includes(format)) {\n      throw new Error(\n        `firebase.storage.StorageReference.putString(_, *, _) 'format' provided is invalid, must be one of ${Object.values(\n          StorageStatics.StringFormat,\n        ).join(',')}.`,\n      );\n    }\n\n    if (!isUndefined(metadata)) {\n      validateMetadata(metadata, update);\n    }\n\n    let _string = string;\n    let _format = format;\n    let _metadata = metadata;\n\n    if (format === StorageStatics.StringFormat.RAW) {\n      _string = Base64.btoa(_string);\n      _format = StorageStatics.StringFormat.BASE64;\n    } else if (format === StorageStatics.StringFormat.DATA_URL) {\n      const { mediaType, base64String } = getDataUrlParts(_string);\n      if (isUndefined(base64String)) {\n        throw new Error(\n          'firebase.storage.StorageReference.putString(*, _, _) invalid data_url string provided.',\n        );\n      }\n\n      if (isUndefined(metadata) || isUndefined(metadata.contentType)) {\n        if (isUndefined(metadata)) {\n          _metadata = {};\n        }\n        _metadata.contentType = mediaType;\n        _string = base64String;\n        _format = StorageStatics.StringFormat.BASE64;\n      }\n    }\n    return { _string, _metadata, _format };\n  }\n}\n\nprovideStorageReferenceClass(StorageReference);\n"],"mappings":";;;;;;;;;;AAkBA,SACEA,MADF,EAEEC,eAFF,EAGEC,cAHF,EAIEC,SAJF,EAKEC,QALF,EAMEC,QANF,EAOEC,QAPF,EAQEC,WARF,EASEC,SATF,EAUEC,iBAVF,EAWEC,UAXF,EAYEC,aAZF,EAaEC,UAbF,QAcO,uCAdP;AAeA,OAAOC,mBAAP;AACA,OAAOC,iBAAP,IAA4BC,4BAA5B;AACA,OAAOC,cAAP;AACA,OAAOC,iBAAP;AACA,SAASC,gBAAT;;IAEqBC,gB;;;;;EACnB,0BAAYC,OAAZ,EAAqBC,IAArB,EAA2B;IAAA;;IAAA;;IACzB,0BAAMA,IAAN;IACA,MAAKC,QAAL,GAAgBF,OAAhB;IAFyB;EAG1B;;;;SAKD,eAAa;MACX,OAAO,KAAKE,QAAL,CAAcC,kBAAd,CAAiCC,OAAjC,CAAyC,OAAzC,EAAkD,EAAlD,CAAP;IACD;;;SAKD,eAAe;MACb,OAAO,KAAKH,IAAZ;IACD;;;SAKD,eAAW;MACT,OAAOZ,iBAAiB,CAAC,KAAKY,IAAN,CAAxB;IACD;;;SAKD,eAAa;MACX,IAAMI,UAAU,GAAGf,UAAU,CAAC,KAAKW,IAAN,CAA7B;;MACA,IAAII,UAAU,KAAK,IAAnB,EAAyB;QACvB,OAAOA,UAAP;MACD;;MACD,OAAO,IAAIN,gBAAJ,CAAqB,KAAKG,QAA1B,EAAoCG,UAApC,CAAP;IACD;;;SAKD,eAAW;MACT,OAAO,IAAIN,gBAAJ,CAAqB,KAAKG,QAA1B,EAAoC,GAApC,CAAP;IACD;;;SAKD,eAAc;MACZ,OAAO,KAAKA,QAAZ;IACD;;;WAKD,eAAMD,IAAN,EAAY;MACV,IAAMK,SAAS,GAAGlB,SAAS,CAAC,KAAKa,IAAN,EAAYA,IAAZ,CAA3B;MACA,OAAO,IAAIF,gBAAJ,CAAqB,KAAKG,QAA1B,EAAoCI,SAApC,CAAP;IACD;;;WAKD,mBAAS;MACP,OAAO,KAAKJ,QAAL,CAAcK,MAAd,CAAqBC,MAArB,CAA4B,KAAKC,QAAL,EAA5B,CAAP;IACD;;;WAKD,0BAAiB;MACf,OAAO,KAAKP,QAAL,CAAcK,MAAd,CAAqBG,cAArB,CAAoC,KAAKD,QAAL,EAApC,CAAP;IACD;;;WAKD,uBAAc;MACZ,OAAO,KAAKP,QAAL,CAAcK,MAAd,CAAqBI,WAArB,CAAiC,KAAKF,QAAL,EAAjC,CAAP;IACD;;;WAKD,cAAKG,OAAL,EAAc;MAAA;;MACZ,IAAI,CAACzB,WAAW,CAACyB,OAAD,CAAZ,IAAyB,CAAC3B,QAAQ,CAAC2B,OAAD,CAAtC,EAAiD;QAC/C,MAAM,IAAIC,KAAJ,CACJ,+EADI,CAAN;MAGD;;MAED,IAAMC,WAAW,GAAG;QAClBC,UAAU,EAAE;MADM,CAApB;;MAIA,IAAIH,OAAJ,EAAa;QACX,IAAI9B,cAAc,CAAC8B,OAAD,EAAU,YAAV,CAAlB,EAA2C;UACzC,IAAI,CAAC5B,QAAQ,CAAC4B,OAAO,CAACG,UAAT,CAAT,IAAiC,CAAChC,SAAS,CAAC6B,OAAO,CAACG,UAAT,CAA/C,EAAqE;YACnE,MAAM,IAAIF,KAAJ,CACJ,yFADI,CAAN;UAGD;;UAED,IAAID,OAAO,CAACG,UAAR,GAAqB,CAArB,IAA0BH,OAAO,CAACG,UAAR,GAAqB,IAAnD,EAAyD;YACvD,MAAM,IAAIF,KAAJ,CACJ,wGADI,CAAN;UAGD;;UAEDC,WAAW,CAACC,UAAZ,GAAyBH,OAAO,CAACG,UAAjC;QACD;;QAED,IAAIH,OAAO,CAACI,SAAZ,EAAuB;UACrB,IAAI,CAAC9B,QAAQ,CAAC0B,OAAO,CAACI,SAAT,CAAb,EAAkC;YAChC,MAAM,IAAIH,KAAJ,CACJ,wFADI,CAAN;UAGD;;UAEDC,WAAW,CAACE,SAAZ,GAAwBJ,OAAO,CAACI,SAAhC;QACD;MACF;;MAED,OAAO,KAAKd,QAAL,CAAcK,MAAd,CACJU,IADI,CACC,KAAKR,QAAL,EADD,EACkBK,WADlB,EAEJI,IAFI,CAEC,UAAAC,IAAI;QAAA,OAAI,IAAIzB,iBAAJ,CAAsB,MAAI,CAACQ,QAA3B,EAAqCiB,IAArC,CAAJ;MAAA,CAFL,CAAP;IAGD;;;WAKD,mBAAU;MAAA;;MACR,OAAO,KAAKjB,QAAL,CAAcK,MAAd,CACJa,OADI,CACI,KAAKX,QAAL,EADJ,EAEJS,IAFI,CAEC,UAAAC,IAAI;QAAA,OAAI,IAAIzB,iBAAJ,CAAsB,MAAI,CAACQ,QAA3B,EAAqCiB,IAArC,CAAJ;MAAA,CAFL,CAAP;IAGD;;;WAKD,aAAIA,IAAJ,EAAUE,QAAV,EAAoB;MAAA;;MAClB,IAAI,CAAClC,WAAW,CAACkC,QAAD,CAAhB,EAA4B;QAC1BvB,gBAAgB,CAACuB,QAAD,EAAW,KAAX,CAAhB;MACD;;MAED,OAAO,IAAIxB,iBAAJ,CAAsB,IAAtB,EAA4B,UAAAyB,IAAI;QAAA,OACrC1C,MAAM,CAAC2C,QAAP,CAAgBJ,IAAhB,EAAsBD,IAAtB,CAA2B,gBAAwB;UAAA,IAArBM,MAAqB,QAArBA,MAAqB;UAAA,IAAbC,MAAa,QAAbA,MAAa;;UACjD,2BAAwC,MAAI,CAACC,aAAL,CAAmBF,MAAnB,EAA2BC,MAA3B,EAAmCJ,QAAnC,EAA6C,KAA7C,CAAxC;UAAA,IAAQM,OAAR,wBAAQA,OAAR;UAAA,IAAiBC,OAAjB,wBAAiBA,OAAjB;UAAA,IAA0BC,SAA1B,wBAA0BA,SAA1B;;UACA,OAAO,MAAI,CAAC3B,QAAL,CAAcK,MAAd,CAAqBuB,SAArB,CACL,MAAI,CAACrB,QAAL,EADK,EAELkB,OAFK,EAGLC,OAHK,EAILC,SAJK,EAKLP,IAAI,CAACS,GALA,CAAP;QAOD,CATD,CADqC;MAAA,CAAhC,CAAP;IAYD;;;WAKD,mBAAUP,MAAV,EAAsE;MAAA;;MAAA,IAApDC,MAAoD,uEAA3C7B,cAAc,CAACoC,YAAf,CAA4BC,GAAe;MAAA,IAAVZ,QAAU;;MACpE,0BAAwC,KAAKK,aAAL,CAAmBF,MAAnB,EAA2BC,MAA3B,EAAmCJ,QAAnC,EAA6C,KAA7C,CAAxC;MAAA,IAAQM,OAAR,uBAAQA,OAAR;MAAA,IAAiBC,OAAjB,uBAAiBA,OAAjB;MAAA,IAA0BC,SAA1B,uBAA0BA,SAA1B;;MAEA,OAAO,IAAIhC,iBAAJ,CAAsB,IAAtB,EAA4B,UAAAyB,IAAI;QAAA,OACrC,MAAI,CAACpB,QAAL,CAAcK,MAAd,CAAqBuB,SAArB,CAA+B,MAAI,CAACrB,QAAL,EAA/B,EAAgDkB,OAAhD,EAAyDC,OAAzD,EAAkEC,SAAlE,EAA6EP,IAAI,CAACS,GAAlF,CADqC;MAAA,CAAhC,CAAP;IAGD;;;WAKD,oBAAW;MACT,IAAI,KAAK9B,IAAL,CAAUiC,MAAV,IAAoB,CAAxB,EAA2B;QACzB,YAAU,KAAKhC,QAAL,CAAcC,kBAAxB;MACD;;MAED,OAAU,KAAKD,QAAL,CAAcC,kBAAxB,SAA8C,KAAKF,IAAnD;IACD;;;WAKD,wBAAeoB,QAAf,EAAyB;MACvBvB,gBAAgB,CAACuB,QAAD,CAAhB;MACA,OAAO,KAAKnB,QAAL,CAAcK,MAAd,CAAqB4B,cAArB,CAAoC,KAAK1B,QAAL,EAApC,EAAqDY,QAArD,CAAP;IACD;;;WASD,qBAAYe,QAAZ,EAAsB;MAAA;;MACpB,IAAI,CAAClD,QAAQ,CAACkD,QAAD,CAAb,EAAyB;QACvB,MAAM,IAAIvB,KAAJ,CACJ,qFADI,CAAN;MAGD;;MAED,OAAO,IAAIpB,mBAAJ,CAAwB,IAAxB,EAA8B,UAAA6B,IAAI;QAAA,OACvC,MAAI,CAACpB,QAAL,CAAcK,MAAd,CAAqB8B,WAArB,CAAiC,MAAI,CAAC5B,QAAL,EAAjC,EAAkDjB,UAAU,CAAC4C,QAAD,CAA5D,EAAwEd,IAAI,CAACS,GAA7E,CADuC;MAAA,CAAlC,CAAP;IAGD;;;WAKD,iBAAQK,QAAR,EAAkBf,QAAlB,EAA4B;MAAA;;MAC1B,IAAI,CAAClC,WAAW,CAACkC,QAAD,CAAhB,EAA4B;QAC1BvB,gBAAgB,CAACuB,QAAD,EAAW,KAAX,CAAhB;MACD;;MAED,IAAI,CAACnC,QAAQ,CAACkD,QAAD,CAAb,EAAyB;QACvB,MAAM,IAAIvB,KAAJ,CACJ,oFADI,CAAN;MAGD;;MAED,OAAO,IAAIhB,iBAAJ,CAAsB,IAAtB,EAA4B,UAAAyB,IAAI;QAAA,OACrC,MAAI,CAACpB,QAAL,CAAcK,MAAd,CAAqB+B,OAArB,CAA6B,MAAI,CAAC7B,QAAL,EAA7B,EAA8CjB,UAAU,CAAC4C,QAAD,CAAxD,EAAoEf,QAApE,EAA8EC,IAAI,CAACS,GAAnF,CADqC;MAAA,CAAhC,CAAP;IAGD;;;WAED,uBAAcP,MAAd,EAAsBC,MAAtB,EAA8BJ,QAA9B,EAAwD;MAAA,IAAhBkB,MAAgB,uEAAP,KAAO;;MACtD,IAAI,CAACrD,QAAQ,CAACsC,MAAD,CAAb,EAAuB;QACrB,MAAM,IAAIX,KAAJ,CACJ,uFADI,CAAN;MAGD;;MAED,IAAI,CAAC2B,MAAM,CAACC,MAAP,CAAc7C,cAAc,CAACoC,YAA7B,EAA2CU,QAA3C,CAAoDjB,MAApD,CAAL,EAAkE;QAChE,MAAM,IAAIZ,KAAJ,wGACiG2B,MAAM,CAACC,MAAP,CACnG7C,cAAc,CAACoC,YADoF,EAEnGW,IAFmG,CAE9F,GAF8F,CADjG,OAAN;MAKD;;MAED,IAAI,CAACxD,WAAW,CAACkC,QAAD,CAAhB,EAA4B;QAC1BvB,gBAAgB,CAACuB,QAAD,EAAWkB,MAAX,CAAhB;MACD;;MAED,IAAIZ,OAAO,GAAGH,MAAd;MACA,IAAII,OAAO,GAAGH,MAAd;MACA,IAAII,SAAS,GAAGR,QAAhB;;MAEA,IAAII,MAAM,KAAK7B,cAAc,CAACoC,YAAf,CAA4BC,GAA3C,EAAgD;QAC9CN,OAAO,GAAG/C,MAAM,CAACgE,IAAP,CAAYjB,OAAZ,CAAV;QACAC,OAAO,GAAGhC,cAAc,CAACoC,YAAf,CAA4Ba,MAAtC;MACD,CAHD,MAGO,IAAIpB,MAAM,KAAK7B,cAAc,CAACoC,YAAf,CAA4Bc,QAA3C,EAAqD;QAC1D,uBAAoCjE,eAAe,CAAC8C,OAAD,CAAnD;QAAA,IAAQoB,SAAR,oBAAQA,SAAR;QAAA,IAAmBC,YAAnB,oBAAmBA,YAAnB;;QACA,IAAI7D,WAAW,CAAC6D,YAAD,CAAf,EAA+B;UAC7B,MAAM,IAAInC,KAAJ,CACJ,wFADI,CAAN;QAGD;;QAED,IAAI1B,WAAW,CAACkC,QAAD,CAAX,IAAyBlC,WAAW,CAACkC,QAAQ,CAAC4B,WAAV,CAAxC,EAAgE;UAC9D,IAAI9D,WAAW,CAACkC,QAAD,CAAf,EAA2B;YACzBQ,SAAS,GAAG,EAAZ;UACD;;UACDA,SAAS,CAACoB,WAAV,GAAwBF,SAAxB;UACApB,OAAO,GAAGqB,YAAV;UACApB,OAAO,GAAGhC,cAAc,CAACoC,YAAf,CAA4Ba,MAAtC;QACD;MACF;;MACD,OAAO;QAAElB,OAAO,EAAPA,OAAF;QAAWE,SAAS,EAATA,SAAX;QAAsBD,OAAO,EAAPA;MAAtB,CAAP;IACD;;;;EA/Q2CrC,a;;SAAzBQ,gB;AAkRrBJ,4BAA4B,CAACI,gBAAD,CAA5B"},"metadata":{},"sourceType":"module"}