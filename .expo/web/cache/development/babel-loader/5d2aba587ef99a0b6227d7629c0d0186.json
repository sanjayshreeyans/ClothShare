{"ast":null,"code":"import QRCode from 'react-native-qrcode-svg';\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { NavigatingContainer } from \"react-native-web/dist/index\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { getDatabase, ref, onValue, set } from \"firebase/database\";\nexport default function QRCodeGenerator(_ref) {\n  var navigation = _ref.navigation;\n  var path = [String(global.user_grade) + \",\" + String(global.user_name) + \",\" + \"Signouts\" + \",\" + String(global.date)];\n  console.log(path, \"Fronm QR Generator\");\n\n  if (global.grade != \"TEACHER\") {\n    var db = getDatabase();\n    var starCountRef = ref(db, global.user_grade + \"/\" + global.user_name + \"/Signouts/\" + global.date);\n    onValue(starCountRef, function (snapshot) {\n      var data = snapshot.val();\n\n      if (data['Completed full Cycle'] == true) {\n        navigation.navigate(\"SuccessfullySignedIn\");\n      }\n    });\n  }\n\n  return React.createElement(ImageBackground, {\n    source: require(\"../Scan.png\"),\n    resizeMode: \"cover\",\n    style: styles.image\n  }, React.createElement(View, {\n    style: styles.overlay\n  }, React.createElement(Text, {\n    style: styles.paragraph\n  }, \"Egress\"), React.createElement(QRCode, {\n    value: path,\n    size: 200\n  }), React.createElement(Text, {\n    style: styles.paragraph\n  }, \"You are welcome to leave the classroom, \", \"\\n\", \"show the generated QRCode to \", \"\\n\", \" the teacher when you return to the classroom.\")));\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    zIndex: 2,\n    justifyContent: \"center\",\n    alignSelf: \"center\",\n    backgroundColor: \"white\",\n    padding: 8\n  },\n  container2: {\n    flex: 1,\n    zIndex: 1,\n    justifyContent: \"center\",\n    backgroundColor: \"white\",\n    padding: 8\n  },\n  paragraph: {\n    margin: 4,\n    fontSize: 35,\n    justifyContent: \"center\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    paddingTop: 40,\n    fontFamily: \"SignPainter\"\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    borderWidth: 1,\n    borderRadius: 15,\n    padding: 10,\n    width: 400,\n    alignSelf: \"center\"\n  },\n  fixToText: {\n    alignSelf: \"center\",\n    width: 200,\n    borderRadius: 15,\n    paddingTop: 20\n  },\n  input2: {\n    height: 40,\n    margin: 12,\n    borderWidth: 0,\n    borderWidth: 0,\n    borderRadius: 15,\n    padding: 10,\n    width: 400,\n    fontSize: 16,\n    textAlign: \"center\",\n    color: \"red\",\n    alignSelf: \"center\"\n  },\n  image2: {\n    flex: 1\n  },\n  image: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  overlay: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    opacity: 1\n  }\n});","map":{"version":3,"sources":["/Users/sanjayshreeyansgmail.com/Documents/Dev/react_egress-master 4/Screens/QRCodeGenerator.js"],"names":["QRCode","React","NavigatingContainer","getDatabase","ref","onValue","set","QRCodeGenerator","navigation","path","String","global","user_grade","user_name","date","console","log","grade","db","starCountRef","snapshot","data","val","navigate","require","styles","image","overlay","paragraph","StyleSheet","create","container","flex","zIndex","justifyContent","alignSelf","backgroundColor","padding","container2","margin","fontSize","fontWeight","textAlign","paddingTop","fontFamily","input","height","borderWidth","borderRadius","width","fixToText","input2","color","image2","alignItems","position","top","right","bottom","left","opacity"],"mappings":"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","sourcesContent":["import QRCode from 'react-native-qrcode-svg';\nimport React from 'react';\nimport {\n    Text,\n    View,\n    StyleSheet,\n    TextInput,\n    Button,\n    TouchableOpacity,\n    NavigatingContainer,\n    ImageBackground,\n  } from \"react-native\";\n// Simple usage, defaults for all but the value\nimport { getDatabase, ref, onValue, set } from \"firebase/database\";\nexport default function QRCodeGenerator ({ navigation }) {\n\n   \n\n    \n\n   var path = [\n     String(global.user_grade) +\n       \",\" +\n       String(global.user_name) +\n       \",\" +\n       \"Signouts\" +\n       \",\" +\n       String(global.date),\n   ];\n  console.log(path, \"Fronm QR Generator\");\n   if (global.grade != \"TEACHER\") {\n     \n     const db = getDatabase();\n\n     const starCountRef = ref(\n       db,\n       global.user_grade + \"/\" + global.user_name + \"/Signouts/\" + global.date\n     );\n     \n     onValue(starCountRef, (snapshot) => {\n\n       const data = snapshot.val();\n\n       if (data['Completed full Cycle'] == true) {\n        navigation.navigate(\"SuccessfullySignedIn\");\n       }\n       \n     });\n   }    \n\n  \n  return (\n    <ImageBackground\n      source={require(\"../Scan.png\")}\n      resizeMode=\"cover\"\n      style={styles.image}\n    >\n      <View style={styles.overlay}>\n      <Text style={styles.paragraph}>Egress</Text>\n\n        <QRCode value={path} size={200} />\n\n        <Text style={styles.paragraph}>\n          You are welcome to leave the classroom, {\"\\n\"}\n          show the generated QRCode to {\"\\n\"} the teacher when you return to the\n          classroom.\n        </Text>\n      </View>\n    </ImageBackground>\n  );\n};\n\n\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      zIndex: 2,\n      justifyContent: \"center\",\n      alignSelf: \"center\",\n      backgroundColor: \"white\",\n      padding: 8,\n    },\n  \n    container2: {\n      flex: 1,\n      zIndex: 1,\n      justifyContent: \"center\",\n  \n      backgroundColor: \"white\",\n      padding: 8,\n    },\n  \n    paragraph: {\n      margin: 4,\n      fontSize: 35,\n      justifyContent: \"center\",\n      fontWeight: \"bold\",\n      textAlign: \"center\",\n      paddingTop: 40,\n      fontFamily: \"SignPainter\",\n      // SignPainter- HouseScript\n      \n    },\n    input: {\n      height: 40,\n      margin: 12,\n      borderWidth: 1,\n      borderWidth: 1,\n      borderRadius: 15,\n      padding: 10,\n      width: 400,\n  \n      alignSelf: \"center\",\n    },\n  \n    fixToText: {\n      alignSelf: \"center\",\n      width: 200,\n      borderRadius: 15,\n      paddingTop: 20,\n    },\n  \n    \n    input2: {\n      height: 40,\n      margin: 12,\n      borderWidth: 0,\n      borderWidth: 0,\n      borderRadius: 15,\n      padding: 10,\n      width: 400,\n      fontSize: 16,\n      textAlign: \"center\",\n      color: \"red\",\n  \n      alignSelf: \"center\",\n    },\n    image2: {\n      flex: 1,\n    },\n    image: {\n      flex: 1,\n      justifyContent: \"center\",\n    },\n  \n    overlay: {\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      alignSelf: \"center\",\n      position: \"absolute\",\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n  \n      opacity: 1,\n    },\n  });\n  "]},"metadata":{},"sourceType":"module"}