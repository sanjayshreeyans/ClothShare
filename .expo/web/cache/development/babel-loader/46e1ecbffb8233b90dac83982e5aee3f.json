{"ast":null,"code":"var _jsxFileName = \"/Users/sanjayshreeyansgmail.com/Documents/Dev/react-cloth-sharing/ClothShare/Screens/agoliaSearch.js\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport PropTypes from \"prop-types\";\nimport { connectRefinementList } from \"react-instantsearch-native\";\nvar styles = StyleSheet.create({\n  container: {\n    padding: 10,\n    backgroundColor: \"#FFFFFF\"\n  },\n  title: {\n    alignItems: \"center\"\n  },\n  titleText: {\n    fontSize: 20\n  },\n  list: {\n    marginTop: 20\n  },\n  item: {\n    paddingVertical: 10,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    borderBottomWidth: 1,\n    alignItems: \"center\"\n  },\n  itemCount: {\n    backgroundColor: \"#252b33\",\n    borderRadius: 25,\n    paddingVertical: 5,\n    paddingHorizontal: 7.5\n  },\n  itemCountText: {\n    color: \"#FFFFFF\",\n    fontWeight: \"800\"\n  }\n});\n\nvar RefinementList = function RefinementList(_ref) {\n  var items = _ref.items,\n      refine = _ref.refine;\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.titleText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Brand\")), React.createElement(View, {\n    style: styles.list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, items.map(function (item) {\n    var labelStyle = {\n      fontSize: 16,\n      fontWeight: item.isRefined ? \"800\" : \"400\"\n    };\n    return React.createElement(TouchableOpacity, {\n      key: item.value,\n      onPress: function onPress() {\n        return refine(item.value);\n      },\n      style: styles.item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: labelStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, item.label), React.createElement(View, {\n      style: styles.itemCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.itemCountText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, item.count)));\n  })));\n};\n\nvar ItemPropType = PropTypes.shape({\n  value: PropTypes.arrayOf(PropTypes.string).isRequired,\n  label: PropTypes.string.isRequired,\n  isRefined: PropTypes.bool.isRequired\n});\nRefinementList.propTypes = {\n  items: PropTypes.arrayOf(ItemPropType).isRequired,\n  refine: PropTypes.func.isRequired\n};\nexport default connectRefinementList(RefinementList);","map":{"version":3,"names":["React","PropTypes","connectRefinementList","styles","StyleSheet","create","container","padding","backgroundColor","title","alignItems","titleText","fontSize","list","marginTop","item","paddingVertical","flexDirection","justifyContent","borderBottomWidth","itemCount","borderRadius","paddingHorizontal","itemCountText","color","fontWeight","RefinementList","items","refine","map","labelStyle","isRefined","value","label","count","ItemPropType","shape","arrayOf","string","isRequired","bool","propTypes","func"],"sources":["/Users/sanjayshreeyansgmail.com/Documents/Dev/react-cloth-sharing/ClothShare/Screens/agoliaSearch.js"],"sourcesContent":["import React from \"react\";\nimport { StyleSheet, View, Text, TouchableOpacity } from \"react-native\";\nimport PropTypes from \"prop-types\";\nimport { connectRefinementList } from \"react-instantsearch-native\";\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 10,\n    backgroundColor: \"#FFFFFF\",\n  },\n  title: {\n    alignItems: \"center\",\n  },\n  titleText: {\n    fontSize: 20,\n  },\n  list: {\n    marginTop: 20,\n  },\n  item: {\n    paddingVertical: 10,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    borderBottomWidth: 1,\n    alignItems: \"center\",\n  },\n  itemCount: {\n    backgroundColor: \"#252b33\",\n    borderRadius: 25,\n    paddingVertical: 5,\n    paddingHorizontal: 7.5,\n  },\n  itemCountText: {\n    color: \"#FFFFFF\",\n    fontWeight: \"800\",\n  },\n});\n\nconst RefinementList = ({ items, refine }) => (\n  <View style={styles.container}>\n    <View style={styles.title}>\n      <Text style={styles.titleText}>Brand</Text>\n    </View>\n    <View style={styles.list}>\n      {items.map((item) => {\n        const labelStyle = {\n          fontSize: 16,\n          fontWeight: item.isRefined ? \"800\" : \"400\",\n        };\n\n        return (\n          <TouchableOpacity\n            key={item.value}\n            onPress={() => refine(item.value)}\n            style={styles.item}\n          >\n            <Text style={labelStyle}>{item.label}</Text>\n            <View style={styles.itemCount}>\n              <Text style={styles.itemCountText}>{item.count}</Text>\n            </View>\n          </TouchableOpacity>\n        );\n      })}\n    </View>\n  </View>\n);\n\nconst ItemPropType = PropTypes.shape({\n  value: PropTypes.arrayOf(PropTypes.string).isRequired,\n  label: PropTypes.string.isRequired,\n  isRefined: PropTypes.bool.isRequired,\n});\n\nRefinementList.propTypes = {\n  items: PropTypes.arrayOf(ItemPropType).isRequired,\n  refine: PropTypes.func.isRequired,\n};\n\nexport default connectRefinementList(RefinementList);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}